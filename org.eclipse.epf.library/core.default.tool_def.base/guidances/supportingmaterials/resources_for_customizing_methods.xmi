<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="-SqArASoV4hTpxAprrWhS1g" name="resources_for_customizing_methods,_omneEMX4EduywMSzPTUUwA" guid="-SqArASoV4hTpxAprrWhS1g" changeDate="2008-08-01T03:33:32.000-0700" version="7.2.0">
  <mainDescription>&lt;p>&#xD;
    There are several use scenarios for &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../../core.default.uma_concept.base/guidances/termdefinitions/method_configuration_C2B8FA8A.html&quot;&#xD;
    guid=&quot;__V7pAMaEEduMlb2cQZNTYw&quot;>method configuration&lt;/a>s produced by using EPF Composer or Rational Method Composer&#xD;
    (both referred to generically here as &quot;Method Composer&quot;). The simplest&amp;nbsp;is to use the&amp;nbsp;published content as-is&#xD;
    (either using a prepublished Web site or by publishing one using the content that is included with Method&#xD;
    Composer).&amp;nbsp;However, you may be&amp;nbsp;looking for&amp;nbsp;how to add, remove, suppress, or modify &lt;a&#xD;
    class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../../core.default.uma_concept.base/guidances/termdefinitions/method_content_6972AE81.html&quot;&#xD;
    guid=&quot;_Ts2joB_MEdq6CKKKq4D7YA&quot;>method content&lt;/a>&amp;nbsp;or &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../../core.default.uma_concept.base/guidances/termdefinitions/process_68E308B4.html&quot;&#xD;
    guid=&quot;_yQ5m2NnmEdmO6L4XMImrsA&quot;>process&lt;/a>&amp;nbsp;elements, or both, to make an existing method configuration&#xD;
    more&amp;nbsp;suitable&amp;nbsp;to your teams' needs, while keeping it consistent and understandable.&#xD;
&lt;/p>This guidance page describes typical customization scenarios and&amp;nbsp;then provides references to additional&#xD;
information on how to customize methods. &#xD;
&lt;h3>&#xD;
    Customization scenarios&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    The following sections describe&amp;nbsp;possible customization scenarios. For information on specific tool features,&#xD;
    consult the Method Composer online Help. For&amp;nbsp;additional information on customizing methods, see the Additional&#xD;
    Resources section that follows here.&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    Use existing plug-ins and packages to build your own process&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    Some consider this the most straight-forward customization scenario. Based on the provided content, you can use Method&#xD;
    Composer to pick and choose the packages with the content that you want to publish and make available to your team.&#xD;
    Removing a method package removes all references to the content of that package from the published process. For&#xD;
    example, you can simplify a process to have it contain a minimal subset of its content by removing packages that&#xD;
    contain elements of work that you do not want to perform. You do this by creating a new method configuration (or&#xD;
    copying an existing one) into your method library. You can select packages as appropriate without affecting the&#xD;
    configuration provided.&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    Add&amp;nbsp;method content&amp;nbsp;that your team needs&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    Some teams may need to perform a different task that is not covered by the standard content. Maybe they need to perform&#xD;
    an extra step in an existing task, or they may need to add a new guideline for a given technique that they are&#xD;
    following. Eventually, they need a new template for a document (or they may need to add or remove sections in an&#xD;
    existing template).&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In such situations, the recommended approach is to create a separate plug-in in your library.&amp;nbsp;It is not a good&#xD;
    practice&amp;nbsp;to make changes in the provided plug-in (meaning any plug-in for which you do not have control), because&#xD;
    new versions of these plug-ins, when deployed, can override the changes that you have made.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Method Composer provides a series of mechanisms that allow you to indirectly modify the content in an existing plug-in&#xD;
    by using &lt;i>content variability&lt;/i>. In your plug-in, you can define an element that contributes, extends, or replaces&#xD;
    an element in the existing plug-in. For example, in your plug-in, you can define a task that contributes a new step to&#xD;
    an existing task. You can also define a new artifact that replaces an existing artifact, and this new artifact can have&#xD;
    a different name, structure, and associated template, for example. Then all you need to do is make sure that the&#xD;
    existing plug-in and your new plug-in are part of the configuration to be published. During publication, Method&#xD;
    Composer will resolve the content variability that you defined by adding the new content into the existing content&#xD;
    where appropriate, replacing existing content with the content you defined, and so on.&amp;nbsp;&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    Define a different development lifecycle&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    Both method content and process are created independently from&amp;nbsp;each other. For example, you create tasks in the&#xD;
    method content (and define their&amp;nbsp;inputs, outputs, and responsible roles), but you do not necessarily define the&#xD;
    lifecycle of your process, meaning the sequence in which the various tasks will be performed. On the process side, you&#xD;
    then define the lifecycle (such as phases, iterations, activities, and tasks), as well as the precedence among these&#xD;
    elements.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Some teams may find the method content appropriate without any further customization, but they may want to work by&#xD;
    following a different software development lifecycle. For example, some teams may like the four development phases and&#xD;
    iterations from the unified process, but some may want to develop iteratively, without being tied to a specific phase&#xD;
    structure. Again, you can add, remove and replace elements in the work breakdown structure of an existing process by&#xD;
    applying process variability.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    As an alternative to tailoring an existing process, you can write a completely new process that reuses activities from&#xD;
    one or more existing processes. In cases where you cannot find any reusable material at all, you can also create a&#xD;
    completely new process from scratch. In most cases, however, you will start developing your own process by assembling&#xD;
    reusable building blocks from method content, as well as predefined process patterns&amp;nbsp;called &lt;a&#xD;
    class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../../core.default.uma_concept.base/guidances/termdefinitions/capability_pattern_F5DDC5F.html&quot;&#xD;
    guid=&quot;_2RUJACO4EdqaNq6Ptg8uyA&quot;>capability patterns&lt;/a>. The resulting assembled process is called a&amp;nbsp;&lt;a&#xD;
    class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../../core.default.uma_concept.base/guidances/termdefinitions/delivery_process_BCDF50B7.html&quot;&#xD;
    guid=&quot;_ZufeMCO3EdqaNq6Ptg8uyA&quot;>delivery process&lt;/a>. This newly created delivery process&amp;nbsp;is part of a&#xD;
    configuration that you publish and make available to members of your team.&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    Publish the process Web site&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    Every customization scenario is finalized by publishing content as HTML (on a Web site). Method Composer enables you to&#xD;
    publish&amp;nbsp;content based on a given configuration, which will publish all of the content available from&#xD;
    the&amp;nbsp;method and process packages selected in that configuration. Another option for publishing is to select only&#xD;
    the capability patterns or delivery process of interest. This will make available only the content related to the&#xD;
    process packages that you select.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    For the published Web site look and feel, you can customize the views and nodes in the directory (tree) browser by&#xD;
    defining &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../../core.default.uma_concept.base/guidances/termdefinitions/custom_category_554AC4D6.html&quot;&#xD;
    guid=&quot;_eqw94MaFEduMlb2cQZNTYw&quot;>custom categories&lt;/a> that will be part of your configuration.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Additional resources&amp;nbsp;&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    For more information on the fundamental concepts of method content and process, see &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../../core.default.uma_concept.base/guidances/concepts/basic_process_concepts_C90EF089.html&quot;&#xD;
    guid=&quot;_FxJEkFUKEd2_rMtRMt_EMg&quot;>Concept: Basic Process Concepts&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    For information on EPF Composer, see &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../../core.default.tool_def.base/guidances/supportingmaterials/epf_resources_446F3946.html&quot;&#xD;
    guid=&quot;_C2FS4F_lEd2zpKtX6B7lBg&quot;>EPF Resources&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    For information on Rational Method Composer, see &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../../core.default.tool_def.base/guidances/supportingmaterials/rational_method_composer_resources_ADE2B192.html&quot;&#xD;
     guid=&quot;_dlGBQF_nEd2zpKtX6B7lBg&quot;>Rational Method Composer Resources&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    For detailed customization scenarios, consult the tutorials included in the Method Composer online Help, as well the&#xD;
    general authoring topics.&#xD;
&lt;/p></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
