<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore">
  <org.eclipse.epf.uma:ProcessDescription xmi:id="-ux7ytJ8wsCQm5rzKYxNA7Q" name="develop_solution,_RXGoodOFEdyqlogshP8l4g" guid="-ux7ytJ8wsCQm5rzKYxNA7Q" version="7.2.0" mainDescription="&lt;h3>&#xA;    Introduction&#xA;&lt;/h3>&#xA;&lt;p>&#xA;    Run this activity as a way to perform goal-based planning and execution. Work is taken on by developers, and work&#xA;    progress is tracked based on the goals achieved using the designed, developer-tested, and integrated source code.&#xA;&lt;/p>&#xA;&lt;h4>&#xA;    Context of what is being developed&#xA;&lt;/h4>&#xA;&lt;p>&#xA;    A context can be specified when a requirement is assigned to be developed, thus specifying how broadly a requirement is&#xA;    to be developed in an iteration. Development may focus on a layer (such as the user interface, business logic, or&#xA;    database access), on a component, and so on.&#xA;&lt;/p>&#xA;&lt;p>&#xA;    Whether a context is specified or not, the developer's responsibility is to create a design and implementation for that&#xA;    requirement.&amp;nbsp;The developer&amp;nbsp;also writes and runs developer tests against the implementation to make sure that&#xA;    it works as designed, both as a unit and integrated into the code base.&#xA;&lt;/p>&#xA;&lt;h4>&#xA;    Overview of workflow&#xA;&lt;/h4>&#xA;&lt;p>&#xA;    Typical changes require some effort in designing the solution before moving into implementation, even if it is only a&#xA;    mental exercise that results in no long-term work product. The design for trivial changes to the existing&#xA;    implementation (to, for example, support some requirement) might be self-evident in the context of the existing&#xA;    architecture and design.&#xA;&lt;/p>&#xA;&lt;p>&#xA;    Once the organization of the technical solution is clear, define developer tests that will verify the implementation.&#xA;    This test-driven approach ensures that design considerations have in fact taken place before the solution is coded. The&#xA;    tests are run up front and, if they fail, clearly define the criteria to determine if the implementation works as&#xA;    intended.&#xA;&lt;/p>&#xA;&lt;p>&#xA;    Failed tests lead to&amp;nbsp;an implementation of the solution, upon completion of which you run the tests again. This&#xA;    innermost loop of implementation and developer testing is repeated until the tests pass.&#xA;&lt;/p>&#xA;&lt;p>&#xA;    Passing the tests does not necessarily mean that the solution is a high-quality, appropriate solution. It is proper to&#xA;    revisit the design at this point. That path loops back through the process, since any changes to the design could&#xA;    affect the developer tests and implementation.&#xA;&lt;/p>&#xA;&lt;p>&#xA;    Once the tests pass and the design of the solution is appropriate, there is one more possible loopback. It is best to&#xA;    keep the test-driven, evolutionary design inner loops as tight as possible. Come up with some small-scale design&#xA;    solution for a part of the work item, define a test or two for the implementation of that one part of the solution,&#xA;    pass that test, verify the quality, and then continue on in a test-first manner until that part of the design is&#xA;    working. Then, in the outermost loop of the activity, go back to the work item and design another chunk to get closer&#xA;    to completion.&#xA;&lt;/p>" longPresentationName="develop_solution,_RXGoodOFEdyqlogshP8l4g" purpose="&lt;ul>&#xA;    &lt;li>&#xA;        For developers: To create a solution for the work item for which they are responsible&#xA;    &lt;/li>&#xA;    &lt;li>&#xA;        For project managers: To have a goal-based way of tracking project status&#xA;    &lt;/li>&#xA;&lt;/ul>" usageNotes="&lt;p>&#xA;    This activity occurs multiple times during each iteration. Usually, there is one instance for each work item planned&#xA;    for that iteration. When instantiated in a project plan, the pattern becomes a development task to be taken on by one&#xA;    or more developers, and you should rename it to include the actual requirement name. Optionally, the words &lt;b>Solution&#xA;    Increment&lt;/b>&amp;nbsp;may be suppressed, then you can instantiate the pattern this way:&#xA;&lt;/p>&#xA;&lt;blockquote>&#xA;    &lt;p align=&quot;left&quot;>&#xA;        Develop requirement_name (within context_name context)&#xA;    &lt;/p>&#xA;&lt;/blockquote>&#xA;&lt;p>&#xA;    If a context is specified, there will be one instance of this pattern for each requirement for each context.&#xA;&lt;/p>&#xA;&lt;blockquote>&#xA;    &lt;p>&#xA;        &lt;b>Example&lt;/b>&#xA;    &lt;/p>&#xA;    &lt;ol>&#xA;        &lt;li>&#xA;            Develop scenario 1 (within user interface context)&#xA;        &lt;/li>&#xA;        &lt;li>&#xA;            Develop scenario 1 (within business logic and database access context)&#xA;        &lt;/li>&#xA;        &lt;li>&#xA;            Develop scenario 2&#xA;        &lt;/li>&#xA;        &lt;li>&#xA;            Develop supplemental requirement 1&#xA;        &lt;/li>&#xA;    &lt;/ol>&#xA;&lt;/blockquote>&#xA;&lt;p>&#xA;    Note that there are four instances of this pattern in the preceding example:&#xA;&lt;/p>&#xA;&lt;ul>&#xA;    &lt;li>&#xA;        The first two are related to the same requirement (scenario 1) but within two different contexts&#xA;    &lt;/li>&#xA;    &lt;li>&#xA;        The last two are related to different requirements, with no context specified.&#xA;    &lt;/li>&#xA;&lt;/ul>"/>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-vRKhx96vINZLGd2eqNzVyg" name="design_solution,_frOcQNOKEdyqlogshP8l4g" guid="-vRKhx96vINZLGd2eqNzVyg" keyConsiderations="&lt;p>&#xD;&#xA;    Each step in this task can cause all previous steps to be revisited in light of new information and decisions.&amp;nbsp;&#xD;&#xA;    For example, while determining how elements collaborate&amp;nbsp;you might find a gap in the requirements that causes you&#xD;&#xA;    to go back to the beginning after collaborating with the analyst, or when evaluating the design a reviewer&#xD;&#xA;    could&amp;nbsp;note that a reusable element being used doesn't work as expected and that could cause you to identify new&#xD;&#xA;    elements to take its place.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;p>&#xD;&#xA;    Consider the architecture while performing this task.&amp;nbsp; All design work must be done while regarding the&#xD;&#xA;    architecture within which the design exists.&amp;nbsp; Furthermore, certain design elements will be deemed architecturally&#xD;&#xA;    significant; those elements will require updates to the architecture.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;p>&#xD;&#xA;    This task will be applied numerous times.&amp;nbsp; Design is best performed in small chunks.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;p>&#xD;&#xA;    Even when starting the design for a particular project it&amp;nbsp;is expected that there will be existing frameworks and&#xD;&#xA;    reusable elements.&amp;nbsp; Every step of this task must give attention to the existing design and existing&#xD;&#xA;    implementation, utilizing existing elements when possible and emulating or improving existing elements as appropriate&#xD;&#xA;    while designing this portion of the solution.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;p>&#xD;&#xA;    Apply patterns throughout this task.&amp;nbsp; Patterns represent proven designs and their usage promotes quality and&#xD;&#xA;    consistency across the design.&#xD;&#xA;&lt;/p>" longPresentationName="design_solution,_frOcQNOKEdyqlogshP8l4g" refinedDescription="&lt;p>&#xD;&#xA;    This task is about designing part of the system, not the whole system.&amp;nbsp; It should be applied based upon some small&#xD;&#xA;    subset of requirements.&amp;nbsp; The requirements driving the design could be scenario-based functional requirements,&#xD;&#xA;    non-functional requirements, or a combination.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;p>&#xD;&#xA;    This task can be applied in some specific context such as the database access elements required for some&#xD;&#xA;    scenario.&amp;nbsp; In this case the task might be applied&amp;nbsp;again later&amp;nbsp;to deal with a different context on the&#xD;&#xA;    same requirements.&amp;nbsp; Keep in mind that to actually build some functionality of value&amp;nbsp;to the users, all&#xD;&#xA;    contexts will typically need to be designed and implemented. For example, to actually utilize some system capability it&#xD;&#xA;    will have to have been designed and implemented all its context such as user interface, business rules, database&#xD;&#xA;    access, etc.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;p>&#xD;&#xA;    For cohesion and completeness, this task is described as an end-to-end pass of designing a scenario of system usage. In&#xD;&#xA;    practice, this task will be revisited many times as the design is first considered, portions are implemented, more&#xD;&#xA;    design is performed based on what was learned, etc. The healthiest application of this task is in very close proximity&#xD;&#xA;    to the implementation.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;p>&#xD;&#xA;    If this task is being performed on an architecturally significant element the results of this design should be&#xD;&#xA;    referenced by the &lt;a class=&quot;elementLink&quot;&#xD;&#xA;    href=&quot;./../../core.tech.slot.base/workproducts/technical_architecture_slot_FF074CDD.html&quot;&#xD;&#xA;    guid=&quot;_8OD-cLPTEduocbW-TPTq7A&quot;>[Technical Architecture]&lt;/a>.&#xD;&#xA;&lt;/p>"/>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-UAvglC1beVBhR4tcCsrtIA" name="design,_frh-QtOKEdyqlogshP8l4g" guid="-UAvglC1beVBhR4tcCsrtIA" longPresentationName="design,_frh-QtOKEdyqlogshP8l4g" refinedDescription="&lt;p>&#xD;&#xA;    This work product describes the elements that will make up the implemented system. It communicates abstractions of&#xD;&#xA;    particular portions of the implementation.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;p>&#xD;&#xA;    While architecture focuses on interfaces, patterns, and key decisions, the design fleshes out the technical details in&#xD;&#xA;    readiness for implementation, or as part of implementation.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;p>&#xD;&#xA;    This product can describe multiple static and dynamic views of the system for examination. Although various views may&#xD;&#xA;    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit&#xD;&#xA;    together without contradiction.&lt;br />&#xD;&#xA;&lt;/p>"/>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-2uPX8tYcrG4NCorQpgu0eA" name="implement_developer_tests,_gXo2UNOKEdyqlogshP8l4g" guid="-2uPX8tYcrG4NCorQpgu0eA" keyConsiderations="&lt;ol>&#xD;&#xA;    &lt;li>&#xD;&#xA;        Automate tests via a unit regression testing tool (for example, xUnit) so that tests may be run by developers&#xD;&#xA;        whenever they make changes to the code.&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        Test to the risk of the implementation element. For example, the more critical an element is, the more important it&#xD;&#xA;        is to test it thoroughly.&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        Pair with&amp;nbsp;team members with testing skills&amp;nbsp;in all steps of this task to gain insight on testing and&#xD;&#xA;        quality considerations.&#xD;&#xA;    &lt;/li>&#xD;&#xA;&lt;/ol>&#xD;&#xA;&lt;p>&#xD;&#xA;    The&amp;nbsp;[Project Work] is implicitly used in implementation tasks to manage which requirements or change requests are&#xD;&#xA;    being realized in the code.&#xD;&#xA;&lt;/p>" longPresentationName="implement_developer_tests,_gXo2UNOKEdyqlogshP8l4g" refinedDescription="&lt;p>&#xD;&#xA;    Developer testing is different from other forms of testing in that it is based on the expected behavior of code units&#xD;&#xA;    rather than being directly based on the system requirements.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;p>&#xD;&#xA;    It is best to do this at a small scale, much smaller than the complete code base to be authored by a developer over the&#xD;&#xA;    course of an iteration. This can be done for one operation, one field added to a user interface, one stored procedure,&#xD;&#xA;    etc. As the code base is incrementally built, new tests will be authored and existing tests might be revisited to test&#xD;&#xA;    additional behavior.&#xD;&#xA;&lt;/p>"/>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-fi-xVZ6lCsQU31y75Ax4OA" name="developer_test,_gX7xQtOKEdyqlogshP8l4g" guid="-fi-xVZ6lCsQU31y75Ax4OA" longPresentationName="developer_test,_gX7xQtOKEdyqlogshP8l4g" refinedDescription="&lt;p>&#xD;&#xA;    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test&#xD;&#xA;    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer&#xD;&#xA;    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a&#xD;&#xA;    particular aspect of a scenario.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;p>&#xD;&#xA;    When you collect developer tests for a specific implementation element, you can validate that the element performs as&#xD;&#xA;    specified.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;p>&#xD;&#xA;    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has&#xD;&#xA;    run correctly.&#xD;&#xA;&lt;/p>"/>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-383xzY4iZ_mRmebRFJ71-Q" name="implement_solution,_hVe-oNOKEdyqlogshP8l4g" guid="-383xzY4iZ_mRmebRFJ71-Q" keyConsiderations="&lt;p>&#xD;&#xA;    It is best when developer tests already exist so there is an unambiguous definition of what behavior is considered&#xD;&#xA;    correct. The implementation should be immediately tested.&#xD;&#xA;&lt;/p>The [Project Work]&amp;nbsp; is implicitly used in implementation tasks to manage which requirements or change requests are&#xD;&#xA;being realized in the code.&lt;br />" longPresentationName="implement_solution,_hVe-oNOKEdyqlogshP8l4g" refinedDescription="&lt;p>&#xD;&#xA;    Usually, this task is focused on a specific implementation&amp;nbsp;element, such as a class or component, but it does not&#xD;&#xA;    need to be.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;p>&#xD;&#xA;    A portion of the design is implemented by performing this task. This task can be performed any number of times during&#xD;&#xA;    an iteration. In fact it is best to do this task in as small a scope as possible to tighten the loop between it and&#xD;&#xA;    related tasks involving developer testing and consideration of the design.&#xD;&#xA;&lt;/p>"/>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-9Jb-Nex6ZZzYbdiQZ5yH9Q" name="build,_aJ1X4No7EdyzZqGyZ7hwdw" guid="-9Jb-Nex6ZZzYbdiQZ5yH9Q" longPresentationName="build,_aJ1X4No7EdyzZqGyZ7hwdw" refinedDescription="&lt;p>&#xD;&#xA;    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a&#xD;&#xA;    build process (typically an automated build script) that creates an executable version, or one that runs. This&#xD;&#xA;    executable version will typically have a number of supporting files that are also considered part of this artifact.&#xD;&#xA;&lt;/p>"/>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-aPWmfmaOCZsb1a9aCKpRSw" name="run_developer_tests,_iRZNQNOKEdyqlogshP8l4g" guid="-aPWmfmaOCZsb1a9aCKpRSw" keyConsiderations="&lt;p>&#xD;&#xA;    It is common to require that code pass all developer tests before it can be delivered in an integrated source code&#xD;&#xA;    repository.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;p>&#xD;&#xA;    Pair with testing experts to gain insight on testing and quality considerations.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;p>&#xD;&#xA;    The&amp;nbsp;[Project Work]&amp;nbsp;is implicitly used in implementation tasks to manage which requirements or change requests&#xD;&#xA;    are being realized in the code.&#xD;&#xA;&lt;/p>" longPresentationName="run_developer_tests,_iRZNQNOKEdyqlogshP8l4g"/>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-nGFCabBnNthDU5t9ws5fbA" name="integrate_and_create_build,_Dlo8wNo8EdyzZqGyZ7hwdw" guid="-nGFCabBnNthDU5t9ws5fbA" keyConsiderations="&lt;p>&#xD;&#xA;    In order to be effective at applying the practice of &lt;a class=&quot;elementLink&quot;&#xD;&#xA;    href=&quot;./../../practice.tech.continuous_integration.base/guidances/guidelines/continuous_integration_13C1A8CA.html&quot;&#xD;&#xA;    guid=&quot;_i8bUEL6cEdqti4GwqTkbsQ&quot;>Continuous Integration&lt;/a>,&amp;nbsp;the time to integrate, build, and test the increment&#xD;&#xA;    must be short enough that it can be performed several times per day.&amp;nbsp; Changes should be broken down into&#xD;&#xA;    relatively small &lt;a class=&quot;elementLink&quot;&#xD;&#xA;    href=&quot;./../../core.mgmt.common.extend_supp/guidances/concepts/change_set_430BF233.html&quot;&#xD;&#xA;    guid=&quot;_1QU9MAIoEdyLh7vsrHZ4YA&quot;>Change Set&lt;/a>s that can be implemented, integrated and tested quickly.&#xD;&#xA;&lt;/p>" longPresentationName="integrate_and_create_build,_Dlo8wNo8EdyzZqGyZ7hwdw"/>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-FB2KP2UFI653oVtHVkndvA" name="implementation,_dC4w4JojEd2XAqcHTC2Siw" guid="-FB2KP2UFI653oVtHVkndvA" longPresentationName="implementation,_dC4w4JojEd2XAqcHTC2Siw" refinedDescription="&lt;p>&#xD;&#xA;    This artifact is the collection of one or more of these elements:&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;ul>&#xD;&#xA;    &lt;li>&#xD;&#xA;        Source code files&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        Data files&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        Build scripts&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        Other files that are transformed into the executable system&#xD;&#xA;    &lt;/li>&#xD;&#xA;&lt;/ul>"/>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-9NwuPPfPDuUrGL-0O-B1Uw" name="test_log,_dC4w4ZojEd2XAqcHTC2Siw" guid="-9NwuPPfPDuUrGL-0O-B1Uw" longPresentationName="test_log,_dC4w4ZojEd2XAqcHTC2Siw" refinedDescription="This artifact provides a detailed, typically time-based record that both verifies that a set of tests were run, and&#xD;&#xA;provides information that relates to the success of those tests. The focus is typically on providing an accurate audit&#xD;&#xA;trail, which enables you to undertake a post-run diagnosis of failures. This raw data is subsequently analyzed to determine&#xD;&#xA;the results of an aspect of the test effort."/>
</xmi:XMI>
