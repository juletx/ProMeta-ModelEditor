<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore">
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-x896fGqISERWysfNwjvB7w" name="system_wide_requirements,_EOwqptOLEdyqlogshP8l4g" guid="-x896fGqISERWysfNwjvB7w" keyConsiderations="&lt;ul>&#xD;&#xA;    &lt;li>&#xD;&#xA;        When you document system-wide requirements, ensure that the needs of all of the stakeholders are represented. In&#xD;&#xA;        particular, include the needs of those who are responsible for maintaining or supporting the system after it is&#xD;&#xA;        delivered.&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        Typically, there are some overlaps and gray areas between system-wide requirements and other requirements work&#xD;&#xA;        products. For example, the authorization behavior of a system can be specified as use cases or as statements within&#xD;&#xA;        system-wide requirements. The overall driving need is that no important requirements are missed or duplicated, and&#xD;&#xA;        that there is an agreed upon approach for capturing and processing every type of requirement.&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        System-wide requirements originate from many places. Documenting the source of the requirement is particularly&#xD;&#xA;        important when you separate externally mandated requirements.&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        Requirements are often thought of as &quot;Qualitative&quot; (specifying a quality or desirable characteristic) versus&#xD;&#xA;        &quot;Quantitative&quot; (specifying a quantity). Qualitative requirements can sometimes be elaborated into quantitative&#xD;&#xA;        requirements.&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        A good quality requirement is one that you can verify, either through testing or some other objective evaluation.&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        You must evaluate system-wide requirements for cost, schedule impact, and level of contribution to business goals.&#xD;&#xA;        Based on your evaluation, the system-wide requirements should be iteratively challenged, defended, and amended.&#xD;&#xA;    &lt;/li>&#xD;&#xA;&lt;/ul>" longPresentationName="system_wide_requirements,_EOwqptOLEdyqlogshP8l4g"/>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-T_J_cyYgoF4KWAcGQbdjjA" name="glossary,_EOwqqNOLEdyqlogshP8l4g" guid="-T_J_cyYgoF4KWAcGQbdjjA" keyConsiderations="&lt;p>&#xD;&#xA;    Although listed as an &lt;i>output from&lt;/i> and an &lt;i>input to&lt;/i> tasks associated with the requirements discipline, this&#xD;&#xA;    artifact can be updated at any time and by any role as new terms are identified. The terms defined should be used&#xD;&#xA;    according to the recorded definitions in all project documentation so that all stakeholders can clearly see that terms&#xD;&#xA;    are being used consistently.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;p>&#xD;&#xA;    One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether to have all terms in a single glossary&#xD;&#xA;    or to maintain terms in several glossaries, business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple&#xD;&#xA;    places, you need to communicate all of those sources to the team and decide which take precedence.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;p>&#xD;&#xA;    It may be important, even in small projects, to reference and use existing broader glossaries, business terms&#xD;&#xA;    artifacts, or data models, where they exist.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;p>&#xD;&#xA;    Industry- and organization-wide glossaries may be referenced, and compliance with such specific chosen standards may be&#xD;&#xA;    required.&#xD;&#xA;&lt;/p>" longPresentationName="glossary,_EOwqqNOLEdyqlogshP8l4g" refinedDescription="&lt;p>&#xD;&#xA;    This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential resources:&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;ul>&#xD;&#xA;    &lt;li>&#xD;&#xA;        A central location to look for terms and abbreviations that are new to development team members&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        Definitions of terms that are used in specific ways within the domain&#xD;&#xA;    &lt;/li>&#xD;&#xA;&lt;/ul>&#xD;&#xA;&lt;p>&#xD;&#xA;    Definitions for the glossary terms come from several sources, such as requirements documents, specifications, and&#xD;&#xA;    discussions with stakeholders and domain experts.&#xD;&#xA;&lt;/p>"/>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-7g1n_R9Eg7zeKCdFrem74A" name="detail_use_case_scenarios,_FX7SINOLEdyqlogshP8l4g" guid="-7g1n_R9Eg7zeKCdFrem74A" keyConsiderations="&lt;p>&#xD;&#xA;    To avoid unnecessary rework, only those use-case scenarios that are scheduled for implementation in the near term (in&#xD;&#xA;    the next iteration or two)&amp;nbsp;must be detailed.&amp;nbsp;&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;p>&#xD;&#xA;    Not all use-case scenarios require detailing.&#xD;&#xA;&lt;/p>" longPresentationName="detail_use_case_scenarios,_FX7SINOLEdyqlogshP8l4g"/>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-snrpmf_Kt0OZ2R7QKJufUQ" name="detail_system_wide_requirements,_F68foNOLEdyqlogshP8l4g" guid="-snrpmf_Kt0OZ2R7QKJufUQ" keyConsiderations="To avoid unnecessary rework, only those requirements that are scheduled for implementation in the near term (in the next&#xD;&#xA;iteration or two)&amp;nbsp;must be detailed." longPresentationName="detail_system_wide_requirements,_F68foNOLEdyqlogshP8l4g"/>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Afh79qcpEs6i404AABE0rA" name="create_test_cases,_HDOWUNOLEdyqlogshP8l4g" guid="-Afh79qcpEs6i404AABE0rA" keyConsiderations="&lt;p>&#xD;&#xA;    Develop test cases in parallel with requirements so that Analysts and stakeholders can agree with the specific&#xD;&#xA;    conditions of satisfaction for each requirement. The test cases act as acceptance criteria by expanding on the intent&#xD;&#xA;    of the system&amp;nbsp;through actual scenarios of use.&amp;nbsp;This allows team members to measure progress in terms of&#xD;&#xA;    passing test cases.&amp;nbsp;&#xD;&#xA;&lt;/p>" longPresentationName="create_test_cases,_HDOWUNOLEdyqlogshP8l4g"/>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-bQ7hVBwsq2Dzk11CI9pT_g" name="test_case,_HDOWUtOLEdyqlogshP8l4g" guid="-bQ7hVBwsq2Dzk11CI9pT_g" longPresentationName="test_case,_HDOWUtOLEdyqlogshP8l4g" refinedDescription="&lt;p>&#xD;&#xA;    A test case specifies the conditions that must be validated to enable an assessment of aspects of the system under&#xD;&#xA;    test. A test case is more formal than a test idea; typically, a test case takes the form of a specification. In less&#xD;&#xA;    formal environments, you can create test cases by identifying a unique ID, name, associated test data, and expected&#xD;&#xA;    results.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;p>&#xD;&#xA;    Test cases can be derived from many sources, and typically include a subset of the requirements (such as use cases,&#xD;&#xA;    performance characteristics, and reliability concerns) and other types of quality attributes. For more information on&#xD;&#xA;    types of tests and their relationships to quality test attributes, see &lt;a class=&quot;elementLinkWithType&quot;&#xD;&#xA;    href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/testing_qualitative_rqmts_CAE80710.html&quot;&#xD;&#xA;    guid=&quot;_0aJ6cMlgEdmt3adZL5Dmdw&quot;>Concept: Testing Qualitative Requirements&lt;/a>.&#xD;&#xA;&lt;/p>"/>
  <org.eclipse.epf.uma:ProcessDescription xmi:id="-yNrF2Ac8VgD0WjoUxGOsIQ" name="identify_and_refine_requirements,_xxcpgdOEEdyqlogshP8l4g" guid="-yNrF2Ac8VgD0WjoUxGOsIQ" version="7.2.0" mainDescription="&lt;p>&#xA;    This activity describes the tasks you perform to gather, specify, analyze, and validate a subset of system's&#xA;    requirements prior to implementation and verification. This does not imply that all requirements are detailed prior to&#xA;    commencing implementation. Rather, you perform this activity throughout the lifecycle with stakeholders and the entire&#xA;    development team collaborating to ensure that a clear, consistent, correct, verifiable, and feasible set of&#xA;    requirements is available, as needed, to drive implementation and verification.&#xA;&lt;/p>&#xA;&lt;p>&#xA;    During &lt;b>Inception&lt;/b>, the focus is on gaining agreement on the problem to be solved, gathering stakeholder needs,&#xA;    and capturing high-level system features.&#xA;&lt;/p>&#xA;&lt;p>&#xA;    During &lt;b>Elaboration&lt;/b>, the focus shifts to defining the solution. This consists of finding those requirements that&#xA;    have the most value to stakeholders, that are particularly challenging or risky, or that are architecturally&#xA;    significant. You then describe requirements (that are prioritized, via the work items list, for implementation in the&#xA;    early iterations) in sufficient detail to validate the development team's understanding of the requirements, to ensure&#xA;    concurrence with stakeholders, and to permit software development to begin. For each of these requirements, define&#xA;    associated test cases to ensure that the requirements are verifiable, and to provide the guidance needed for&#xA;    verification and validation.&#xA;&lt;/p>&#xA;&lt;p>&#xA;    During Construction, the focus shifts to refining the system definition. This consists of detailing the remaining&#xA;    requirements and associated test cases as necessary to drive implementation and verification, and managing requirements&#xA;    change.&#xA;&lt;/p>" longPresentationName="identify_and_refine_requirements,_xxcpgdOEEdyqlogshP8l4g"/>
</xmi:XMI>
