<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore">
  <org.eclipse.epf.uma:ProcessDescription xmi:id="-VFp5B68iro5ga1pz4nbQFw" name="develop_architecture,_KaeNsdOFEdyqlogshP8l4g" guid="-VFp5B68iro5ga1pz4nbQFw" version="7.2.0" mainDescription="&lt;p>&#xA;    This activity refines the initial high-level architecture into working software. The objective is to produce stable&#xA;    software that adequately addresses the technical risks in scope.&#xA;&lt;/p>&#xA;&lt;p>&#xA;    The architect and developers work together to:&#xA;&lt;/p>&#xA;&lt;ul>&#xA;    &lt;li>&#xA;        Refine the initial sketch of the architecture into concrete design elements&#xA;    &lt;/li>&#xA;    &lt;li>&#xA;        Ensure that the architecture decisions are adequately captured and communicated&#xA;    &lt;/li>&#xA;    &lt;li>&#xA;        Ensure that the team has enough information to enable software to be developed&#xA;    &lt;/li>&#xA;    &lt;li>&#xA;        Ensure that the requirements that were prioritized for the current iteration are adequately addressed in the&#xA;        software&#xA;    &lt;/li>&#xA;&lt;/ul>&#xA;&lt;p>&#xA;    In an iterative project, the team should not attempt to develop the architecture for the entire project in a single&#xA;    pass. Rather, they should focus on meeting the requirements in scope for the current iteration, while making decisions&#xA;    in the context of the wider project.&#xA;&lt;/p>" longPresentationName="develop_architecture,_KaeNsdOFEdyqlogshP8l4g" howtoStaff="&lt;p>&#xA;    These activities are best carried out as a collaborative effort by the team, with the architect acting as a focal point&#xA;    for coordinating and facilitating the decisions.&#xA;&lt;/p>" usageNotes="&lt;p>&#xA;    The work is best done in several sessions, perhaps performed over a few days.&#xA;&lt;/p>"/>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-V51fxSq2AzJuVZF90kMOmA" name="architecture_notebook,_EjG_cNOKEdyqlogshP8l4g" guid="-V51fxSq2AzJuVZF90kMOmA" longPresentationName="architecture_notebook,_EjG_cNOKEdyqlogshP8l4g" refinedDescription="&lt;p>&#xD;&#xA;    This artifact&amp;nbsp;describes the &lt;a class=&quot;elementLink&quot;&#xD;&#xA;    href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/software_architecture_59A08DE0.html&quot;&#xD;&#xA;    guid=&quot;__O7tAMVvEduLYZUGfgZrkQ&quot;>Software Architecture&lt;/a>.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;p>&#xD;&#xA;    It provides a place for maintaining the list of architectural issues, along with the associated architectural&#xD;&#xA;    decisions, designs, patterns, code documented (or pointed to), and so forth -- all at appropriate levels to make it&#xD;&#xA;    easy to understand what architectural decisions have been made and remain to be made.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;p>&#xD;&#xA;    It is helpful for architects to use this artifact to collaborate with other team members in developing the architecture&#xD;&#xA;    and to help team members understand the motivation behind architectural decisions so that those decisions can be&#xD;&#xA;    robustly implemented. For example, the architect may put constraints on how data is packaged and communicated between&#xD;&#xA;    different parts of the system. This may appear to be a burden, but the justification in the Architecture Notebook can&#xD;&#xA;    explain that there is a significant performance bottleneck when communicating with a legacy system. The rest of the&#xD;&#xA;    system must adapt to this bottleneck by following a specific data packaging scheme.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;p>&#xD;&#xA;    This artifact should also inform the team members how the system is partitioned or organized so that the team can adapt&#xD;&#xA;    to the needs of the system. It also gives a first glimpse of the system and its technical motivations to whoever must&#xD;&#xA;    maintain and change the architecture later.&lt;br />&#xD;&#xA;&lt;/p>"/>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-j18JWuRaOWhpi32MRwfW7A" name="refine_the_arch,_6RuKMN_1EdyOsumnGvWsEg" guid="-j18JWuRaOWhpi32MRwfW7A" keyConsiderations="&lt;p>&#xD;&#xA;    It is important to continue to reduce the complexity of the&amp;nbsp;solution by raising the levels of abstraction.&amp;nbsp;&#xD;&#xA;    For more information, see &lt;a class=&quot;elementLinkWithType&quot;&#xD;&#xA;    href=&quot;./../../core.tech.common.extend_supp/guidances/guidelines/abstract_away_complexity_DBF13AE6.html&quot;&#xD;&#xA;    guid=&quot;_we3F4ACpEdu8m4dIntu6jA&quot;>Guideline: Abstract Away Complexity&lt;/a>.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;p>&#xD;&#xA;    Continue the collaboration with the whole&amp;nbsp;team on the refining of the architecture in order to promote consensus&#xD;&#xA;    and a common understanding of the overall solution. The architect should be working to coordinate and guide the&#xD;&#xA;    technical activities of the team rather than doing all the work alone.&amp;nbsp;Place special emphasis&amp;nbsp;on&#xD;&#xA;    involving&amp;nbsp;the developer(s) throughout this task since it's the developed solution that will prove out the&#xD;&#xA;    architecture and may result in refinements to the architecture documentation.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;p>&#xD;&#xA;    Ensure that those who need to act upon the architectural work&amp;nbsp;understand&amp;nbsp;it and are able to work with&#xD;&#xA;    it.&amp;nbsp;Make sure that the description of the architecture clearly conveys not only the solution but also the&#xD;&#xA;    motivation and objectives related to the&amp;nbsp;decisions that have been made in shaping the architecture. This will make&#xD;&#xA;    it easier for others to understand the architecture and to adapt it over time.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;p>&#xD;&#xA;    You can communicate your decisions as many ways as you wish.&amp;nbsp; For example:&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;ul>&#xD;&#xA;    &lt;li>&#xD;&#xA;        Publication of&amp;nbsp;reference source code&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        Publication of&amp;nbsp;reference models&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        Publication of&amp;nbsp;software architecture documentation&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        Formal&amp;nbsp;presentations of the material&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        Informal walkthroughs of the architecture&#xD;&#xA;    &lt;/li>&#xD;&#xA;&lt;/ul>" longPresentationName="refine_the_arch,_6RuKMN_1EdyOsumnGvWsEg" refinedDescription="&lt;p>&#xD;&#xA;    This task&amp;nbsp;builds upon the outlined architecture and makes concrete and unambiguous architectural decisions to&#xD;&#xA;    support development.&amp;nbsp; It takes into&amp;nbsp;account any design and implementation work products that have been&#xD;&#xA;    developed so far.&amp;nbsp; In other words, the architecture evolves as the solution is designed and implemented, and the&#xD;&#xA;    architecture documentation is updated to reflect any changes made during development. This is&amp;nbsp;a key,&amp;nbsp;since&#xD;&#xA;    the actual implementation is the only real &quot;proof&quot; that the software architecture is viable and provides the definitive&#xD;&#xA;    basis for validating the suitability&amp;nbsp;of the architecture.&amp;nbsp; For more information, see &lt;a&#xD;&#xA;    class=&quot;elementLinkWithType&quot;&#xD;&#xA;    href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/executable_arch_D4E68CBD.html&quot;&#xD;&#xA;    guid=&quot;_O1kAANvfEduv2KOT-Teh6w&quot;>Concept: Executable Architecture&lt;/a>.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;p>&#xD;&#xA;    The results are captured for future reference and are communicated across the team.&#xD;&#xA;&lt;/p>"/>
</xmi:XMI>
