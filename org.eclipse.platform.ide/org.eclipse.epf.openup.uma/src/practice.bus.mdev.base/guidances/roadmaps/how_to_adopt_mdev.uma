<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmi:id="-8HIJRiG1VwF8mwvxuZ0c2Q" name="new_roadmap,_z093UOQVEdyy8NdG6HqqRA" guid="-8HIJRiG1VwF8mwvxuZ0c2Q" changeDate="2010-08-31T17:37:16.000+0200" version="7.5.0" mainDescription="&lt;h3>&#xA;    &lt;em>Getting Started&lt;/em>&#xA;&lt;/h3>&#xA;&lt;p>&#xA;    Understand&amp;nbsp;the basic building blocks of methods and how to define and customize them.&amp;nbsp; Implement your method&#xA;    assets and publish a method configuration that can be reviewed by your stakeholders.&#xA;&lt;/p>&#xA;&lt;p>&#xA;    As you apply the recommendations described in the practice, capture what you have learned, what worked for your team&#xA;    and what didn't so that you can continually fine-tune how your team applies the practice.&#xA;&lt;/p>&#xA;&lt;h3>&#xA;    &lt;em>Common Pitfalls&lt;/em>&#xA;&lt;/h3>&#xA;&lt;p>&#xA;    Following are some common pitfalls when adopting this practice:&#xA;&lt;/p>&#xA;&lt;ul>&#xA;    &lt;li>&#xA;        Spending too much time developing method assets to get them &quot;perfect&quot; before trying them out with real project&#xA;        work. Define just enough to get started and then gather feedback for improvement from teams as they use the assets.&#xA;    &lt;/li>&#xA;    &lt;li>&#xA;        Creating too many method assets at too fine-grained a level can overwhelm and confuse teams. Confirm that you&#xA;        understand the requirements for each asset and how it will help project teams before investing a lot of time in&#xA;        development.&lt;br />&#xA;        &lt;br />&#xA;    &lt;/li>&#xA;&lt;/ul>" longPresentationName="new_roadmap,_z093UOQVEdyy8NdG6HqqRA"/>
