<?xml version="1.0" encoding="UTF-8"?><org.eclipse.epf.uma:ContentDescription xmlns:epf="http://www.eclipse.org/epf" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:xmi="http://www.omg.org/XMI" longPresentationName="achieving_concurrence,_E-dPIL-GEdqb7N6KIeDL8Q" xmi:version="2.0" epf:version="1.5.1" xmi:id="-pNA0DbSdSoUqnjQIiOeHcQ" name="achieving_concurrence,_E-dPIL-GEdqb7N6KIeDL8Q" guid="-pNA0DbSdSoUqnjQIiOeHcQ" changeDate="2010-05-26T18:25:24.000+0200" version="1.0.0">
  <mainDescription>&lt;p&gt;&#xD;
    The cost of correcting errors increases exponentially throughout the development lifecycle &lt;a&#xD;
    class="elementLinkWithUserText"&#xD;
    href="./../../../core.tech.common.base/guidances/supportingmaterials/references.tech_6CCF393.html"&#xD;
    guid="_9ToeIB83Edqsvps02rpOOg"&gt;[BOE88]&lt;/a&gt;. Therefore, it is important to discover problems early enough to solve them&#xD;
    quickly and inexpensively.&#xD;
&lt;/p&gt;&#xD;
&lt;p&gt;&#xD;
    Requirements reviews are intended to discover problems with the &lt;a class="elementLink"&#xD;
    href="./../../../core.tech.common.extend_supp/guidances/concepts/requirements_8006414F.html"&#xD;
    guid="_0Wh-sMlgEdmt3adZL5Dmdw"&gt;Requirements&lt;/a&gt;&amp;nbsp;before you spend significant time and work in implementing the&#xD;
    wrong thing. This is not to say that you must have a complete set of requirements before implementation, but be sure to&#xD;
    review, internally and with stakeholders, those that are selected for implementation in the early iterations and those&#xD;
    that will have a broad impact on the system (often called &lt;a class="elementLink"&#xD;
    href="./../../../core.tech.common.extend_supp/guidances/concepts/arch_significant_requirements_1EE5D757.html"&#xD;
    guid="_HrZGIA4MEduibvKwrGxWxA"&gt;Architecturally Significant Requirements&lt;/a&gt;) to ensure everyone's concurrence before&#xD;
    investing significant effort in implementation.&#xD;
&lt;/p&gt;&#xD;
&lt;h3&gt;&#xD;
    Informal reviews&#xD;
&lt;/h3&gt;&#xD;
&lt;p&gt;&#xD;
    Requirements reviews can be informal, such as simply showing draft requirements to your colleagues or demonstrating a&#xD;
    prototype.&#xD;
&lt;/p&gt;&#xD;
&lt;p&gt;&#xD;
    These informal reviews are excellent for getting the structure of the requirements correct and removing obvious&#xD;
    mistakes. By keeping the review team small, it is easier to make rapid progress. However, informal reviews can miss&#xD;
    important perspectives&amp;nbsp;of&amp;nbsp;critical stakeholders.&#xD;
&lt;/p&gt;&#xD;
&lt;h3&gt;&#xD;
    Formal reviews&#xD;
&lt;/h3&gt;&#xD;
&lt;p&gt;&#xD;
    Requirement reviews can be formal meetings. Start with careful preparation, so that you receive and organize comments&#xD;
    before the meeting. The meeting itself should produce decisions on all review items. After the meeting, you must pursue&#xD;
    the review actions to completion. If these actions involve a substantial amount of work or require a change to an&#xD;
    artifact that is under configuration control, consider submitting change requests to prioritize and track the work.&#xD;
&lt;/p&gt;&#xD;
&lt;p&gt;&#xD;
    Formal reviews are more wide-ranging and expensive. They provide for more balanced reviews from multiple&#xD;
    perspectives.&amp;nbsp; However, formal reviews involve more people, which makes them more difficult to coordinate (thus&#xD;
    the need for formality) and expensive in terms of work hours.&#xD;
&lt;/p&gt;&#xD;
&lt;h3&gt;&#xD;
    Two-tier reviews&#xD;
&lt;/h3&gt;&#xD;
&lt;p&gt;&#xD;
    One technique to get the best of both worlds is to use staged, or "two-tier", reviews&amp;nbsp;&lt;a&#xD;
    class="elementLinkWithUserText"&#xD;
    href="./../../../core.tech.common.base/guidances/supportingmaterials/references.tech_6CCF393.html"&#xD;
    guid="_9ToeIB83Edqsvps02rpOOg"&gt;[ADO03]&lt;/a&gt;. The&amp;nbsp;first tier is informal and performed by a smaller team, possibly&#xD;
    many times. The second&amp;nbsp;tier is more formal and performed by the complete group, perhaps only once.&#xD;
&lt;/p&gt;&#xD;
&lt;p&gt;&#xD;
    &lt;strong&gt;First-tier review:&lt;/strong&gt; The authors of the requirements and the development team&amp;nbsp;review the&#xD;
    requirements during the first-tier reviews to ensure that they are&amp;nbsp;unambiguous, complete,&amp;nbsp;correct and&#xD;
    consistent.&amp;nbsp; It is important to include testers and developers to ensure that the requirements are verifiable and&#xD;
    feasible.&amp;nbsp;These reviews&amp;nbsp;determine whether the requirements are ready for the larger community to&#xD;
    review.&amp;nbsp; First-tier reviews may be informal, formal, or a combination of the two.&#xD;
&lt;/p&gt;&#xD;
&lt;p&gt;&#xD;
    &lt;strong&gt;Second-tier review:&lt;/strong&gt; Involve the larger group&amp;nbsp;during the higher-tier review to get more minds&#xD;
    working on the problem and to achieve concurrence that the requirements are suitable for implementation and validation.&#xD;
&lt;/p&gt;&#xD;
&lt;p&gt;&#xD;
    At both stages, the checklists for the requirements work products are helpful.&#xD;
&lt;/p&gt;&#xD;
&lt;p&gt;&#xD;
    Tiered reviews offer several benefits:&#xD;
&lt;/p&gt;&#xD;
&lt;ol&gt;&#xD;
    &lt;li&gt;&#xD;
        Eliminate the noise caused by minor edits during the first-tier reviews, allowing subsequent reviews to focus on&#xD;
        functionality&#xD;
    &lt;/li&gt;&#xD;
    &lt;li&gt;&#xD;
        Provide a professional look to the requirements, presenting both the requirements and their authors in the best&#xD;
        possible light&#xD;
    &lt;/li&gt;&#xD;
    &lt;li&gt;&#xD;
        Safeguard the time of stakeholders who are reviewing the requirements, thus preventing "review burnout", or&#xD;
        diminished effectiveness from overload and stress&#xD;
    &lt;/li&gt;&#xD;
    &lt;li&gt;&#xD;
        Provide the best opportunity for full, effective reviews.&#xD;
    &lt;/li&gt;&#xD;
&lt;/ol&gt;&#xD;
&lt;h3&gt;&#xD;
    Golden rules of reviewing&#xD;
&lt;/h3&gt;&#xD;
&lt;p&gt;&#xD;
    Follow these golden&amp;nbsp;rules of reviewing &lt;a class="elementLinkWithUserText"&#xD;
    href="./../../../core.tech.common.base/guidances/supportingmaterials/references.tech_6CCF393.html"&#xD;
    guid="_9ToeIB83Edqsvps02rpOOg"&gt;[TEL06]&lt;/a&gt;:&#xD;
&lt;/p&gt;&#xD;
&lt;ol&gt;&#xD;
    &lt;li&gt;&#xD;
        &lt;strong&gt;Encourage criticism:&lt;/strong&gt; Remember that people are improving the requirements, not criticizing you.&#xD;
        Even the harshest criticism often contains a grain of truth. Adopt the attitude that every suggestion is a gift.&#xD;
    &lt;/li&gt;&#xD;
    &lt;li&gt;&#xD;
        &lt;strong&gt;Choose your best reviewers:&lt;/strong&gt; A few specific people make the best reviewers, time and again.&#xD;
        Cultivate them.&#xD;
    &lt;/li&gt;&#xD;
    &lt;li&gt;&#xD;
        &lt;strong&gt;Allow adequate time:&lt;/strong&gt; It's not over until you have agreed upon and made the corrections.&lt;br /&gt;&#xD;
        &amp;nbsp;&#xD;
    &lt;/li&gt;&#xD;
&lt;/ol&gt;</mainDescription>
</org.eclipse.epf.uma:ContentDescription>