<?xml version="1.0" encoding="UTF-8"?><org.eclipse.epf.uma:ContentDescription xmlns:epf="http://www.eclipse.org/epf" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:xmi="http://www.omg.org/XMI" longPresentationName="new_concept,_HZGFsKrPEdu6T6WyNqBzqQ" xmi:version="2.0" epf:version="1.5.1" xmi:id="-zfl87vJBFdinDB02ArLXOQ" name="new_concept,_HZGFsKrPEdu6T6WyNqBzqQ" guid="-zfl87vJBFdinDB02ArLXOQ" changeDate="2008-02-14T14:48:12.000+0100" version="7.2.0">
  <mainDescription>&lt;h3 align="left"&gt;&#xD;
    Modeling Components&#xD;
&lt;/h3&gt;&#xD;
&lt;p align="left"&gt;&#xD;
    The UML component is a modeling construct that provides the following capabilities:&#xD;
&lt;/p&gt;&#xD;
&lt;div align="left"&gt;&#xD;
    &lt;ul&gt;&#xD;
        &lt;li&gt;&#xD;
            Group classes to define a larger granularity part of a system&#xD;
        &lt;/li&gt;&#xD;
        &lt;li&gt;&#xD;
            Separate the visible interfaces from internal implementation&#xD;
        &lt;/li&gt;&#xD;
        &lt;li&gt;&#xD;
            Execute instances run-time&#xD;
        &lt;/li&gt;&#xD;
    &lt;/ul&gt;&#xD;
&lt;/div&gt;&#xD;
&lt;p align="left"&gt;&#xD;
    A component includes &lt;strong&gt;provided&lt;/strong&gt; and &lt;strong&gt;required&lt;/strong&gt; interfaces that form the basis for wiring&#xD;
    components together. A &lt;strong&gt;provided interface&lt;/strong&gt; is one that is either implemented directly by the component&#xD;
    or one of its realizing classes or subcomponents, or it is the type of a provided port of the component. A&#xD;
    &lt;strong&gt;required interface&lt;/strong&gt; is designated by a usage dependency of the component or one of its realizing&#xD;
    classes or subcomponents, or it is the type of a required port.&#xD;
&lt;/p&gt;&#xD;
&lt;p align="left"&gt;&#xD;
    A component has an external view (or &lt;em&gt;black box&lt;/em&gt; view) through its publicly visible properties and operations&#xD;
    .Optionally, a behavior such as a protocol state machine may be attached to an interface, a port, and the component&#xD;
    itself to define the external view more precisely by making dynamic constraints in the sequence of operation calls&#xD;
    explicit. The wiring between components in a system or other context can be structurally defined by using dependencies&#xD;
    between component interfaces (typically on component diagrams).&#xD;
&lt;/p&gt;&#xD;
&lt;p align="left"&gt;&#xD;
    Optionally, you can make a more detailed specification of the structural collaboration by using parts and connectors in&#xD;
    composite structures to specify the role or instance-level collaboration between components. That is the component's&#xD;
    internal view (or &lt;em&gt;white-box&lt;/em&gt; view) through its private properties and realizing classes or subcomponents. This&#xD;
    view shows how the external behavior is realized internally. The mapping between external and internal views is by&#xD;
    dependencies on components diagrams or delegation connectors to internal parts on composite structure diagrams.&#xD;
&lt;/p&gt;&#xD;
&lt;p align="left"&gt;&#xD;
    A number of UML standard stereotypes exist that apply to components, including &amp;lt;&amp;lt;subsystem&amp;gt;&amp;gt; to model&#xD;
    large-scale components, and &amp;lt;&amp;lt;specification&amp;gt;&amp;gt; and &amp;lt;&amp;lt;realization&amp;gt;&amp;gt; to model components with&#xD;
    distinct specification and realization definitions, where one specification may have multiple realizations.&amp;nbsp;&#xD;
&lt;/p&gt;&#xD;
&lt;p align="left"&gt;&#xD;
    The recommendation is to&amp;nbsp;use components as the representation for design subsystems.&#xD;
&lt;/p&gt;&#xD;
&lt;h3 align="left"&gt;&#xD;
    UML Definitions -- A History&#xD;
&lt;/h3&gt;&#xD;
&lt;p align="left"&gt;&#xD;
    The definition of &lt;em&gt;component&lt;/em&gt; with the UML has changed over time with the release of different versions. The&#xD;
    version of UML you use may be constrained by the capabilities of the modeling tools you use. That is why the&#xD;
    definitions from 1.3 to 2.0 are provided here.&#xD;
&lt;/p&gt;&#xD;
&lt;p align="left"&gt;&#xD;
    UML 2.0 defined &lt;em&gt;component&lt;/em&gt; as the following:&#xD;
&lt;/p&gt;&#xD;
&lt;blockquote dir="ltr" style="MARGIN-RIGHT: 0px"&gt;&#xD;
    &lt;blockquote&gt;&#xD;
        &lt;p align="left"&gt;&#xD;
            ...a modular part of a system that encapsulates its contents and whose manifestation is replaceable within its&#xD;
            environment.&#xD;
        &lt;/p&gt;&#xD;
        &lt;p align="left"&gt;&#xD;
            A component defines its behavior in terms of provided and required interfaces. As such, a component serves as a&#xD;
            type whose conformance is defined by these provided and required interfaces (encompassing both their static as&#xD;
            well as dynamic semantics).&#xD;
        &lt;/p&gt;&#xD;
    &lt;/blockquote&gt;&#xD;
&lt;/blockquote&gt;&#xD;
&lt;p align="left"&gt;&#xD;
    UML 1.5 defined &lt;em&gt;component&lt;/em&gt; as the following:&#xD;
&lt;/p&gt;&#xD;
&lt;blockquote&gt;&#xD;
    &lt;blockquote&gt;&#xD;
        &lt;div align="left"&gt;&#xD;
            A modular, deployable, and replaceable part of a system that encapsulates implementation and exposes a set of&#xD;
            interfaces. A component is typically specified by one or more classes or subcomponents that reside on it and&#xD;
            may be implemented by one or more artifacts (e.g., binary, executable, or script files).&#xD;
        &lt;/div&gt;&#xD;
        &lt;div align="left"&gt;&#xD;
            &lt;p&gt;&#xD;
                In UML 1.3 and earlier versions of the UML, the component notation was used to represent files in the&#xD;
                implementation. Files are no longer considered components by the latest UML definitions. However, many&#xD;
                tools and UML profiles still use the component notation to represent files.&#xD;
            &lt;/p&gt;&#xD;
            &lt;p&gt;&#xD;
                &lt;br /&gt;&#xD;
                &lt;br /&gt;&#xD;
                &amp;nbsp;&#xD;
            &lt;/p&gt;&#xD;
        &lt;/div&gt;&#xD;
    &lt;/blockquote&gt;&#xD;
&lt;/blockquote&gt;</mainDescription>
</org.eclipse.epf.uma:ContentDescription>