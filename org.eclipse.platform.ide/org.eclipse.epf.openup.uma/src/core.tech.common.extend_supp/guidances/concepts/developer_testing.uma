<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmi:id="-EOoqKeF2SEXao6XhNXBD-w" name=",_ADwlAJRtEdyrdaw_xGakyw" guid="-EOoqKeF2SEXao6XhNXBD-w" changeDate="2008-08-12T14:15:16.000+0200" version="7.2.0" mainDescription="&lt;p>&#xD;&#xA;    Developer testing is the act of regression testing source code by developers. This is sometimes called &quot;unit regression&#xD;&#xA;    testing&quot; but many developer tests go beyond unit testing to address integration testing as well.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;h3>&#xD;&#xA;    Testing Philosophies&#xD;&#xA;&lt;/h3>&#xD;&#xA;&lt;p>&#xD;&#xA;    Here are some important philosophies with regard to developer testing:&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;ol>&#xD;&#xA;    &lt;li>&#xD;&#xA;        The goal is to find defects. Successful tests find bugs, but correcting the bugs falls into other areas.&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        Test early and often. The cost of change rises exponentially the longer it takes to find and then remove a defect.&#xD;&#xA;        The implication is that you want to test as early as possible.&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        Testing builds confidence. Many people fear making a change to their code because they are afraid that they will&#xD;&#xA;        break it, but with a full test suite in place if you do break something you know you will detect it and then fix&#xD;&#xA;        it.&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        One test is worth a thousand opinions. You can say that your application works, but until you show the test results&#xD;&#xA;        you might not be believed.&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        Test to the risk. The riskier something is, the more it needs to be reviewed and tested. For example, you should&#xD;&#xA;        invest significantly more&amp;nbsp;effort testing a safety-critical algorithm for measuring radiation doses, and far&#xD;&#xA;        less effort testing the &quot;change font size&quot; function of the same application.&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        You can validate all artifacts. You can test all your artifacts, not just your source code, although the focus of&#xD;&#xA;        this guidance is testing code.&#xD;&#xA;    &lt;/li>&#xD;&#xA;&lt;/ol>&#xD;&#xA;&lt;h3>&#xD;&#xA;    Qualities of a Good Developer Test&#xD;&#xA;&lt;/h3>These are the qualities of a good developer test: &#xD;&#xA;&lt;ul class=&quot;noindent&quot;>&#xD;&#xA;    &lt;li>&#xD;&#xA;        It runs fast. It has short setup, run time, and clean-up.&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        It runs in isolation. You should be able to reorder your tests.&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        It is understandable. Good tests have consistent and informative names and use data that makes them easy to read&#xD;&#xA;        and to understand.&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        It uses real data. For example, use copies of production data when appropriate, but remember that you'll typically&#xD;&#xA;        have to create some specific &quot;artificial&quot; test data as well.&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        It is minimally cohesive. The test represents one step toward your overall goal. The test should address one and&#xD;&#xA;        one only issue.&#xD;&#xA;    &lt;/li>&#xD;&#xA;&lt;/ul>" longPresentationName=",_ADwlAJRtEdyrdaw_xGakyw"/>
