<?xml version="1.0" encoding="UTF-8"?><org.eclipse.epf.uma:ContentDescription xmlns:epf="http://www.eclipse.org/epf" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:xmi="http://www.omg.org/XMI" xmi:version="2.0" epf:version="1.5.1" xmi:id="-BQLZ5GRUNrMdU6XeZAfe9Q" name="use_case,_KudM0NcJEdqz_d2XWoVt6Q" guid="-BQLZ5GRUNrMdU6XeZAfe9Q" changeDate="2008-09-03T14:28:03.000+0200" version="7.2.0">
  <mainDescription>&lt;h3&gt;&#xD;
    Overview&#xD;
&lt;/h3&gt;&#xD;
&lt;p&gt;&#xD;
    A use case describes the interactions between one of more&amp;nbsp;&lt;a class="elementLink"&#xD;
    href="./../../../core.tech.common.extend_supp/guidances/concepts/actor_411726C.html"&#xD;
    guid="_zGqO0MDpEduTGJ8i4u8TMw"&gt;Actor&lt;/a&gt;s and the system in order to provide an observable result of value for the&#xD;
    initiating actor.&#xD;
&lt;/p&gt;&#xD;
&lt;p&gt;&#xD;
    The functionality of a system is defined by different use cases, each of which represents a specific goal (to obtain&#xD;
    the observable result of value) for a particular actor.&#xD;
&lt;/p&gt;&#xD;
&lt;p&gt;&#xD;
    In an automated teller machine shown in Figure 1, the Bank Customer can withdraw cash from an account, transfer funds&#xD;
    between accounts, or deposit funds to an account. These correspond to specific goals that the actor has in using the&#xD;
    system.&amp;nbsp;&#xD;
&lt;/p&gt;&lt;br /&gt;&#xD;
&lt;p&gt;&#xD;
    &lt;img height="321" alt="Figure 1: ATM Use-Case Example" src="resources/fig1_atm_ex.gif" width="456" /&gt;&#xD;
&lt;/p&gt;&#xD;
&lt;blockquote dir="ltr" style="MARGIN-RIGHT: 0px"&gt;&#xD;
    &lt;blockquote dir="ltr" style="MARGIN-RIGHT: 0px"&gt;&#xD;
        &lt;p&gt;&#xD;
            Figure 1: ATM Use-Case Example&#xD;
        &lt;/p&gt;&#xD;
    &lt;/blockquote&gt;&#xD;
&lt;/blockquote&gt;&#xD;
&lt;p&gt;&#xD;
    Each use case is associated with a goal of one of the actors. The collection of use cases constitutes all the possible&#xD;
    ways of using the system. You should be able to determine the goal of a use case simply by observing its name.&#xD;
&lt;/p&gt;&#xD;
&lt;p&gt;&#xD;
    A use case describes the interactions between the actor(s) and the system in the form of a dialog between the actor(s)&#xD;
    and the system, structured as follows:&#xD;
&lt;/p&gt;&#xD;
&lt;ol&gt;&#xD;
    &lt;li&gt;&#xD;
        The actor &amp;lt;&amp;lt;does something&amp;gt;&amp;gt;&#xD;
    &lt;/li&gt;&#xD;
    &lt;li&gt;&#xD;
        The system &amp;lt;&amp;lt;does something in response&amp;gt;&amp;gt;&#xD;
    &lt;/li&gt;&#xD;
    &lt;li&gt;&#xD;
        The actor &amp;lt;&amp;lt;does something else&amp;gt;&amp;gt;&#xD;
    &lt;/li&gt;&#xD;
    &lt;li&gt;&#xD;
        The system ...&#xD;
    &lt;/li&gt;&#xD;
&lt;/ol&gt;&#xD;
&lt;p&gt;&#xD;
    Each dialog of this form is called a "Flow of Events".&#xD;
&lt;/p&gt;&#xD;
&lt;p&gt;&#xD;
    Because there are many flows of events possible for achieving the goal (for example, the flow may differ depending upon&#xD;
    specific input from the actor), and there are situations in which the goal cannot be achieved (for example, a required&#xD;
    network connection is currently unavailable), each use case will contain several flows, including one "Basic Flow of&#xD;
    Events" and several "Alternative Flows".&#xD;
&lt;/p&gt;&#xD;
&lt;p&gt;&#xD;
    The Basic Flow of Events specifies the interactions between the actor(s) and the system for the ideal case, where&#xD;
    everything goes as planned, and the actor's goal (the observable result of value) is met. The basic flow represents the&#xD;
    main capability provided by the system for this use case.&#xD;
&lt;/p&gt;&#xD;
&lt;p&gt;&#xD;
    As the name implies, Alternative Flows specify alternative interactions associated with the same goal.&#xD;
&lt;/p&gt;&#xD;
&lt;p&gt;&#xD;
    Closely related to use cases is the concept of a scenario. A scenario is a &lt;em&gt;&lt;strong&gt;specific&lt;/strong&gt;&lt;/em&gt; flow of&#xD;
    events, for a &lt;em&gt;&lt;strong&gt;specific&lt;/strong&gt;&lt;/em&gt; set of inputs to the system, states of the system, and states of the&#xD;
    system's environment. Scenarios are closely related to test cases.&#xD;
&lt;/p&gt;&#xD;
&lt;h3&gt;&#xD;
    Properties of Use Cases&#xD;
&lt;/h3&gt;&#xD;
&lt;h4&gt;&#xD;
    &lt;a id="Name" name="Name"&gt;Name&lt;/a&gt;&#xD;
&lt;/h4&gt;&#xD;
&lt;p&gt;&#xD;
    Each use case should have a name that indicates what is achieved by its interaction with the actors. The name may have&#xD;
    to be several words to be understood. Note: No two use cases can have the same name.&#xD;
&lt;/p&gt;&#xD;
&lt;h4&gt;&#xD;
    &lt;a id="Brief Description" name="Brief Description"&gt;Brief Description&lt;/a&gt;&#xD;
&lt;/h4&gt;&#xD;
&lt;p&gt;&#xD;
    The brief description of the use case should reflect its purpose.&#xD;
&lt;/p&gt;&#xD;
&lt;h4&gt;&#xD;
    Flow of Events&#xD;
&lt;/h4&gt;&#xD;
&lt;h5&gt;&#xD;
    &lt;a id="Flow of Events - Contents" name="Flow of Events - Contents"&gt;Flow of Events - Contents&lt;/a&gt;&#xD;
&lt;/h5&gt;&#xD;
&lt;p&gt;&#xD;
    The flow of events should describe the use case's flow of events clearly enough for an outsider to easily understand.&#xD;
    Remember, the flow of events should represent &lt;em&gt;what&lt;/em&gt; the system does, not &lt;em&gt;how&lt;/em&gt; the system is design to&#xD;
    perform the required behavior.&#xD;
&lt;/p&gt;&#xD;
&lt;p&gt;&#xD;
    Follow these guidelines for the contents of the flow of events:&#xD;
&lt;/p&gt;&#xD;
&lt;ul&gt;&#xD;
    &lt;li&gt;&#xD;
        Describe how the use case starts and ends.&#xD;
    &lt;/li&gt;&#xD;
    &lt;li&gt;&#xD;
        Describe what data is exchanged between the actor and the use case.&#xD;
    &lt;/li&gt;&#xD;
    &lt;li&gt;&#xD;
        Do not describe the details of the user interface, unless it is necessary to understand the behavior of the&#xD;
        system.&amp;nbsp;Specifying user interface details too early will limit design options.&amp;nbsp;&#xD;
    &lt;/li&gt;&#xD;
    &lt;li&gt;&#xD;
        Describe the flow of events, not only the functionality. To enforce this, start every action with "When the actor&#xD;
        ... ".&#xD;
    &lt;/li&gt;&#xD;
    &lt;li&gt;&#xD;
        Describe only the events that belong to the use case, and not what happens in other use cases or outside of the&#xD;
        system.&#xD;
    &lt;/li&gt;&#xD;
    &lt;li&gt;&#xD;
        Avoid vague terminology.&#xD;
    &lt;/li&gt;&#xD;
    &lt;li&gt;&#xD;
        Detail the flow of events. Specify what happens when, for each action. Remember this text will be used to identify&#xD;
        test cases.&#xD;
    &lt;/li&gt;&#xD;
&lt;/ul&gt;&#xD;
&lt;p&gt;&#xD;
    If you have used certain terms in other use cases, be sure to use the exact same terms in this use case, and&#xD;
    that&amp;nbsp;the meaning of the terms is consistent. To manage common terms, put them in a glossary.&#xD;
&lt;/p&gt;&#xD;
&lt;h5&gt;&#xD;
    &lt;a id="Flow of Events - Structure" name="Flow of Events - Structure"&gt;Flow of Events - Structure&lt;/a&gt;&#xD;
&lt;/h5&gt;&#xD;
&lt;p&gt;&#xD;
    The two main parts of the flow of events are &lt;b&gt;basic flow of events&lt;/b&gt; and &lt;b&gt;alternative flows of events&lt;/b&gt;. The&#xD;
    basic flow of events should cover what "normally" happens when the use case is performed. The alternative flows of&#xD;
    events cover behavior of optional or exceptional character in relation to the normal behavior, and also variations of&#xD;
    the normal behavior. You can think of the alternative flows of events as detours from the basic flow of events, some of&#xD;
    which will return to the basic flow of events and some of which will end the execution of the use case.&#xD;
&lt;/p&gt;&#xD;
&lt;p&gt;&#xD;
    The straight arrow in Figure 2 represents the basic flow of events, and the curves represent alternative paths in&#xD;
    relation to the normal. Some alternative paths return to the basic flow of events, whereas others end the use case.&#xD;
&lt;/p&gt;&#xD;
&lt;p&gt;&#xD;
    &lt;img height="212" alt="Diagram described in caption." src="resources/ucstrct.gif" width="231" /&gt;&amp;nbsp;&#xD;
&lt;/p&gt;&#xD;
&lt;p&gt;&#xD;
    Figure 2: Typical structure of a use case flow of events&#xD;
&lt;/p&gt;&#xD;
&lt;p class="picturetext"&gt;&#xD;
    Both the basic and alternative flows should be further structured into steps or sub-flows. In doing this, your main&#xD;
    goal should be readability of the text. A&amp;nbsp;guideline is that a sub-flow should be a segment of behavior within the&#xD;
    use case that has a clear purpose, and is "atomic" in the sense that you do either all or none of the actions&#xD;
    described.&#xD;
&lt;/p&gt;&#xD;
&lt;h4 class="picturetext"&gt;&#xD;
    &lt;a id="Special Requirements" name="Special Requirements"&gt;Special Requirements&lt;/a&gt;&#xD;
&lt;/h4&gt;&#xD;
&lt;p&gt;&#xD;
    In the Special Requirements of a use case, you describe all the requirements associated with&amp;nbsp;the use case that are&#xD;
    not covered by the flow of events. These are non-functional requirements that will influence the design. See also the&#xD;
    discussion on non-functional requirements in &lt;a class="elementLinkWithType"&#xD;
    href="./../../../core.tech.common.extend_supp/guidances/concepts/requirements_8006414F.html"&#xD;
    guid="_0Wh-sMlgEdmt3adZL5Dmdw"&gt;Concept: Requirements&lt;/a&gt;.&#xD;
&lt;/p&gt;&#xD;
&lt;h4&gt;&#xD;
    &lt;a id="preconditions and Postconditions" name="preconditions and Postconditions"&gt;Preconditions and Post-conditions&lt;/a&gt;&#xD;
&lt;/h4&gt;&#xD;
&lt;p&gt;&#xD;
    A &lt;strong&gt;precondition&lt;/strong&gt; is the state of the system and its&amp;nbsp;environment that is required before the use&#xD;
    case can be started.&amp;nbsp;Post-Conditions are&amp;nbsp;the states the system can be in after the use case has ended. It can&#xD;
    be&amp;nbsp;helpful to use the&amp;nbsp;concepts of &lt;b&gt;precondition&lt;/b&gt; and &lt;b&gt;post-condition&lt;/b&gt; to clarify how the flow of&#xD;
    events starts and ends. However, only use them only if the audience for the description of the use case agrees that it&#xD;
    is helpful. Figure 3 shows an example.&#xD;
&lt;/p&gt;&#xD;
&lt;p&gt;&#xD;
    &lt;img height="278" alt="Diagram described in caption." src="resources/ucprepst.gif" width="344" /&gt;&#xD;
&lt;/p&gt;&lt;br class="picturetext" /&gt;&#xD;
&lt;br /&gt;&#xD;
&lt;blockquote dir="ltr" style="MARGIN-RIGHT: 0px"&gt;&#xD;
    &lt;blockquote dir="ltr" style="MARGIN-RIGHT: 0px"&gt;&#xD;
        &lt;blockquote dir="ltr" style="MARGIN-RIGHT: 0px"&gt;&#xD;
            &lt;p&gt;&#xD;
                Figure 3: Illustration of preconditions and resulting post-conditions&#xD;
            &lt;/p&gt;&#xD;
        &lt;/blockquote&gt;&#xD;
    &lt;/blockquote&gt;&#xD;
&lt;/blockquote&gt;&#xD;
&lt;p class="exampleheading" dir="ltr"&gt;&#xD;
    Examples&#xD;
&lt;/p&gt;&#xD;
&lt;p class="example" dir="ltr"&gt;&#xD;
    &lt;strong&gt;A precondition for the use case Cash Withdrawal in the ATM machine:&lt;/strong&gt; The customer has a personally&#xD;
    issued card that fits in the card reader, has been issued a PIN number, and is registered with the banking system.&#xD;
&lt;/p&gt;&#xD;
&lt;p class="example" dir="ltr" style="MARGIN-RIGHT: 0px"&gt;&#xD;
    &lt;strong&gt;A post-condition for the use case Cash Withdrawal in the ATM machine:&lt;/strong&gt; At the end of the use case, all&#xD;
    account and transaction logs are balanced, communication with the banking system is reinitialized and the card is&#xD;
    returned to the customer.&#xD;
&lt;/p&gt;</mainDescription>
</org.eclipse.epf.uma:ContentDescription>