<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmi:id="-yEWkrWZ3VUcjZPhq6bvScg" name="new_concept,_2jyfUAhVEduRe8TeoBmuGg" guid="-yEWkrWZ3VUcjZPhq6bvScg" changeDate="2010-11-23T20:24:10.272+0100" version="1.0.0" mainDescription="&lt;h3>&#xD;&#xA;    Explanation&#xD;&#xA;&lt;/h3>&#xD;&#xA;&lt;p>&#xD;&#xA;    A use-case model is a model of how different types of users interact with the system to solve a problem.&amp;nbsp; As such,&#xD;&#xA;    it describes the goals of the users, the interactions between the users and the system, and the required behavior of&#xD;&#xA;    the system in satisfying these goals.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;p>&#xD;&#xA;    A use-case model consists of a number of model elements.&amp;nbsp; The most important model elements are: use cases, actors&#xD;&#xA;    and the relationships between them.&amp;nbsp;&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;p>&#xD;&#xA;    A use-case diagram is used to graphically depict a subset of the model to simplify communications.&amp;nbsp; There will&#xD;&#xA;    typically be several use-case diagrams associated with a given model, each showing a subset of the model elements&#xD;&#xA;    relevant for a particular purpose.&amp;nbsp; The same model element may be shown on several use-case diagrams, but each&#xD;&#xA;    instance must be consistent.&amp;nbsp; If tools are used to maintain the use-case model, this consistency constraint is&#xD;&#xA;    automated so that any changes to the model element (changing the name for example) will be automatically reflected on&#xD;&#xA;    every use-case diagram that shows that element.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;p>&#xD;&#xA;    The use-case model may contain packages that are used to structure the model to simplify analysis, communications,&#xD;&#xA;    navigation, development, maintenance and planning.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;p>&#xD;&#xA;    Much of the use-case model is in fact textual, with the text captured in the&amp;nbsp;use-case specifications&amp;nbsp;that are&#xD;&#xA;    associated with each use-case model element.&amp;nbsp;These specifications describe the flow of events of the use case.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;p>&#xD;&#xA;    The use-case model serves as a unifying thread throughout system development. It is used as the primary specification&#xD;&#xA;    of the functional requirements for the system, as the basis for analysis and design, as an input to iteration planning,&#xD;&#xA;    as the basis of defining test cases and as the basis for user documentation&amp;nbsp;&amp;nbsp;&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;h3>&#xD;&#xA;    Basic model elements&#xD;&#xA;&lt;/h3>&#xD;&#xA;&lt;p>&#xD;&#xA;    The use-case model contains, as a minimum, the following basic model elements.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;h4>&#xD;&#xA;    Actor&#xD;&#xA;&lt;/h4>&#xD;&#xA;&lt;p>&#xD;&#xA;    A model element representing&amp;nbsp;each actor. Properties include the actors name and brief description. See&amp;nbsp;&lt;a&#xD;&#xA;    class=&quot;elementLinkWithType&quot; href=&quot;./../../../core.tech.common.extend_supp/guidances/concepts/actor_411726C.html&quot;&#xD;&#xA;    guid=&quot;_zGqO0MDpEduTGJ8i4u8TMw&quot;>Concept: Actor&lt;/a> for more information.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;h4>&#xD;&#xA;    Use Case&#xD;&#xA;&lt;/h4>&#xD;&#xA;&lt;p>&#xD;&#xA;    A model element representing&amp;nbsp;each use case. Properties include the use case name and use case specification.&#xD;&#xA;    See&amp;nbsp;Use Case artifact and &lt;a class=&quot;elementLinkWithType&quot;&#xD;&#xA;    href=&quot;./../../../core.tech.common.extend_supp/guidances/concepts/use_case_BB199D1B.html&quot;&#xD;&#xA;    guid=&quot;_KudM0NcJEdqz_d2XWoVt6Q&quot;>Concept: Use Case&lt;/a> for more information.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;h4>&#xD;&#xA;    Associations&#xD;&#xA;&lt;/h4>&#xD;&#xA;&lt;p>&#xD;&#xA;    Associations are used to describe the relationships between actors and the use cases they participate in. This&#xD;&#xA;    relationship is commonly known as a &quot;communicates-association&quot;.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;h3>&#xD;&#xA;    Advanced model elements&#xD;&#xA;&lt;/h3>&#xD;&#xA;&lt;p>&#xD;&#xA;    The use-case model may also contain the following advanced model elements.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;h4>&#xD;&#xA;    Subject&#xD;&#xA;&lt;/h4>&#xD;&#xA;&lt;p>&#xD;&#xA;    A model element that represents the boundary of the system of interest.&amp;nbsp;&amp;nbsp;&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;h4>&#xD;&#xA;    Use-Case Package&#xD;&#xA;&lt;/h4>&#xD;&#xA;&lt;p>&#xD;&#xA;    A model element used to structure the use case model to simplify analysis, communications, navigation, and&#xD;&#xA;    planning.&amp;nbsp; If there are many use cases or actors, you can use use-case packages to further structure the use-case&#xD;&#xA;    model in much the same manner you use folders or directories to structure the information on your hard-disk.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;p>&#xD;&#xA;    You can partition a use-case model into use-case packages for several reasons, including:&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;ul>&#xD;&#xA;    &lt;li>&#xD;&#xA;        To reflect the order, configuration, or delivery units in the finished system thus supporting iteration planning.&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        To support parallel development by dividing the problem into bite-sized pieces.&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        To simplify communication with different stakeholders by creating packages for containing use cases and actors&#xD;&#xA;        relevant to a particular stakeholder.&#xD;&#xA;    &lt;/li>&#xD;&#xA;&lt;/ul>&#xD;&#xA;&lt;h4>&#xD;&#xA;    Generalizations&#xD;&#xA;&lt;/h4>&#xD;&#xA;&lt;p>&#xD;&#xA;    A relationship&amp;nbsp;between actors to support re-use of common properties.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;h4>&#xD;&#xA;    Dependencies&#xD;&#xA;&lt;/h4>&#xD;&#xA;&lt;p>&#xD;&#xA;    A number of dependency types between use cases are defined in UML. In particular, &amp;lt;&amp;lt;extend&amp;gt;&amp;gt; and&#xD;&#xA;    &amp;lt;&amp;lt;include&amp;gt;&amp;gt;.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;p>&#xD;&#xA;    &amp;lt;&amp;lt;extend&amp;gt;&amp;gt; is used to include optional behavior from an extending use case in an extended use case.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;p>&#xD;&#xA;    &amp;lt;&amp;lt;include&amp;gt;&amp;gt; is used to include common behavior from an included use case into a base use case in order to&#xD;&#xA;    support re-use of common behavior.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;p>&#xD;&#xA;    The latter is the most widely used dependency and is useful for:&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;ul>&#xD;&#xA;    &lt;li>&#xD;&#xA;        Factoring out behavior from the base use case that is not necessary for the understanding of the primary purpose of&#xD;&#xA;        the use case to simplify communications.&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        Factoring out behavior that is in common for two or more use cases to maximize re-use, simplify maintenance and&#xD;&#xA;        ensure consistency.&#xD;&#xA;    &lt;/li>&#xD;&#xA;&lt;/ul>&#xD;&#xA;&lt;h3>&#xD;&#xA;    Example Use-Case Diagram&#xD;&#xA;&lt;/h3>&#xD;&#xA;&lt;p>&#xD;&#xA;    Figure 1 shows a use-case diagram from an Automated Teller Machine (ATM) use-case model.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;p>&#xD;&#xA;    &amp;nbsp;&lt;img alt=&quot;Figure 1: ATM Use-Case Diagram&quot; src=&quot;resources/atm_uc_diagram.gif&quot; />&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;p>&#xD;&#xA;    Figure 1: ATM Use-Case Diagram&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;p>&#xD;&#xA;    This diagram shows the subject (atm:ATM), four actors (Bank Customer, Bank, Cashier and Maintenance Person), five use&#xD;&#xA;    cases (Withdraw Cash, Transfer Funds, Deposit Funds, Refill Machine and Validate User), three &amp;lt;&amp;lt;includes&amp;gt;&amp;gt;&#xD;&#xA;    dependencies, and the associations between the performing actors and the use cases.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;p>&#xD;&#xA;    The use cases Withdraw Cash, Deposit Funds, and Transfer Funds all need to include how the customer is identified to&#xD;&#xA;    the system. This behavior can be extracted to a new inclusion use case called Validate User, which the three base use&#xD;&#xA;    cases &amp;lt;&amp;lt;include&amp;gt;&amp;gt;. The base use cases are independent of the method used for identification, and it is&#xD;&#xA;    therefore encapsulated in the inclusion use case. From the perspective of the base use cases, it does not matter&#xD;&#xA;    whether the method for identification is to read a magnetic bank card, or perform a retinal scan. They only depend on&#xD;&#xA;    the result of Validate Customer.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;p>&#xD;&#xA;    Note that Figure 1 is only a partial view of the use-case model. The complete use-case model also includes descriptions&#xD;&#xA;    of each actor, descriptions of each use case, and use-case specifications for each use case.&amp;nbsp; For a more complete&#xD;&#xA;    example of this use case model see&amp;nbsp;&lt;a class=&quot;elementLink&quot;&#xD;&#xA;    href=&quot;./../../../core.tech.common.extend_supp/guidances/examples/uc_model_evolve_960F136B.html&quot;&#xD;&#xA;    guid=&quot;_t4QdAMNqEdu2IdAIaWZyAw&quot;>Evolution of the Use-Case Model&lt;/a>.&lt;br />&#xD;&#xA;&lt;/p>" longPresentationName="new_concept,_2jyfUAhVEduRe8TeoBmuGg"/>
