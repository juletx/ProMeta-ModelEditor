<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmi:id="-Rcm_MlViENAvFFyIe9V3dQ" name="identify_and_outline_actors_and_ucs,_eyL0wCu-EdqSxKAVa9kmvA" guid="-Rcm_MlViENAvFFyIe9V3dQ" changeDate="2009-03-27T12:07:00.000+0100" version="1.0.0" mainDescription="&lt;h4>&#xD;&#xA;    Identifying actors&#xD;&#xA;&lt;/h4>&#xD;&#xA;&lt;p>&#xD;&#xA;    Find the external entities with which the system under development must interact. Candidates include groups of users&#xD;&#xA;    who will require help from the system to perform their tasks and run the system's primary or secondary functions, as&#xD;&#xA;    well as external hardware, software, and other systems.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;p>&#xD;&#xA;    Define each candidate actor by naming it and writing a brief description. Includes the actor's area of responsibility&#xD;&#xA;    and the goals that the actor will attempt to accomplish when using the system. Eliminate actor candidates who do not&#xD;&#xA;    have any goals.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;p>&#xD;&#xA;    These questions are useful in identifying actors:&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;ul>&#xD;&#xA;    &lt;li>&#xD;&#xA;        Who will supply, use, or remove information from the system?&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        Who will use the system?&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        Who is interested in a certain feature or service provided by the system?&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        Who will support and maintain the system?&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        What are the system's external resources?&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        What other systems will need to interact with the system under development?&#xD;&#xA;    &lt;/li>&#xD;&#xA;&lt;/ul>&#xD;&#xA;&lt;p>&#xD;&#xA;    Review the list of stakeholders that you captured in the Vision statement. Not all stakeholders will be actors&#xD;&#xA;    (meaning, they will not all interact directly with the system under development), but this list of stakeholders is&#xD;&#xA;    useful for identifying candidates for actors.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;h4>&#xD;&#xA;    Identifying&amp;nbsp;use cases&#xD;&#xA;&lt;/h4>&#xD;&#xA;&lt;p>&#xD;&#xA;    The best way to find use cases is to consider what each actor requires of the system. For each actor, human or not,&#xD;&#xA;    ask:&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;ul>&#xD;&#xA;    &lt;li>&#xD;&#xA;        What are the goals that the actor will attempt to accomplish with the system?&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        What are the primary tasks that the actor wants the system to perform?&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        Will the actor create, store, change, remove, or read data in the system?&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        Will the actor need to inform the system about sudden external changes?&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        Does the actor need to be informed about certain occurrences, such as unavailability of a network resource,&amp;nbsp;in&#xD;&#xA;        the system?&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        Will the actor perform a system startup or shutdown?&#xD;&#xA;    &lt;/li>&#xD;&#xA;&lt;/ul>&#xD;&#xA;&lt;p>&#xD;&#xA;    Understanding how&amp;nbsp;the target&amp;nbsp;organization works and how this information system might be incorporated into&#xD;&#xA;    existing operations gives an idea of system's surroundings. That information can reveal other use case candidates.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;p>&#xD;&#xA;    Give a unique name and brief description that clearly describes the goals for each use case. If the candidate use case&#xD;&#xA;    does not have goals, ask yourself why it exists, and then either identify a goal or eliminate the use case.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;h4>&#xD;&#xA;    Outlining Use Cases&#xD;&#xA;&lt;/h4>&#xD;&#xA;&lt;p>&#xD;&#xA;    Without going into details, write a first draft of the flow of events of the use cases identified as being of high&#xD;&#xA;    priority. Initially, write a simple step-by-step description of the basic flow of the use case. The step-by-step&#xD;&#xA;    description is a simple ordered list of interactions between the actor and the system. For example, the description of&#xD;&#xA;    the basic flow of the Withdraw Cash use case of an automated teller machine (ATM) would be something like this:&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;ol>&#xD;&#xA;    &lt;li>&#xD;&#xA;        The&amp;nbsp;customer inserts a bank card.&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        The system validates the card and prompts the person to enter a personal identification number (PIN).&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        The customer&amp;nbsp;enters a PIN.&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        The system validates the PIN and prompts the customer to select an action.&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        The customer selects Withdraw Cash.&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        The system prompts the customer to choose which account.&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        The customer selects the checking account.&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        The system prompts for an amount.&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        The customer enters the amount to withdraw.&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        The system validates the amount (assuming sufficient funds), and then issues cash and receipt.&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        The customer takes the cash and receipt, and then retrieves the bank card.&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        The use case ends.&#xD;&#xA;    &lt;/li>&#xD;&#xA;&lt;/ol>&#xD;&#xA;&lt;p>&#xD;&#xA;    As you create this step-by-step description of the basic flow of events, you can discover alternative and exceptional&#xD;&#xA;    flows. For example, what happens if the customer enters an invalid PIN? Record the name and a brief description of each&#xD;&#xA;    alternate flow that you identified.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;h4>&#xD;&#xA;    Representing relationships between actors and use cases&#xD;&#xA;&lt;/h4>&#xD;&#xA;&lt;p>&#xD;&#xA;    The relationship between actors and use cases&amp;nbsp;can be captured, or documented.&amp;nbsp; There are several ways to do&#xD;&#xA;    this. If you are using a use-case model on the project, you can create use-case diagrams to show how&amp;nbsp;actors and&#xD;&#xA;    use cases&amp;nbsp;relate to each other.&amp;nbsp; Refer to&amp;nbsp;&lt;a&#xD;&#xA;    href=&quot;./../../../practice.tech.use_case_driven_dev.base/guidances/guidelines/use_case_model_4C64E97D.html&quot;&#xD;&#xA;    guid=&quot;_0VAUsMlgEdmt3adZL5Dmdw&quot;>Guideline: Use-Case Model&lt;/a>&amp;nbsp;for more information.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;p>&#xD;&#xA;    If you are not using a use-case model for the project, make sure that each use case identifies the associated primary&#xD;&#xA;    and secondary actors.&#xD;&#xA;&lt;/p>" longPresentationName="identify_and_outline_actors_and_ucs,_eyL0wCu-EdqSxKAVa9kmvA"/>
