<?xml version="1.0" encoding="UTF-8"?><org.eclipse.epf.uma:ContentDescription xmlns:epf="http://www.eclipse.org/epf" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:xmi="http://www.omg.org/XMI" longPresentationName="uc_model,_0VAUsMlgEdmt3adZL5Dmdw" xmi:version="2.0" epf:version="1.5.1" xmi:id="_AGvpcMM3EdmSIPI87WLu3g" name="uc_model,_0VAUsMlgEdmt3adZL5Dmdw" guid="_AGvpcMM3EdmSIPI87WLu3g" changeDate="2009-03-28T18:40:44.000+0100" version="1.0.0">
  <mainDescription>&lt;h3&gt;&#xD;
    Introduction&#xD;
&lt;/h3&gt;&#xD;
&lt;p&gt;&#xD;
    The key to successful iterative development is ensuring that the development team maximizes stakeholder value and&#xD;
    minimizes risk early in the lifecycle, while minimizing re-work later.&amp;nbsp; This imposes some constraints on how we&#xD;
    develop the use-case model.&#xD;
&lt;/p&gt;&#xD;
&lt;p&gt;&#xD;
    At one extreme is the classical waterfall approach, which attempts to&amp;nbsp;detail all of the requirements prior to&#xD;
    design and implementation.&amp;nbsp; This approach delays delivery of stakeholder value and risk reduction unnecessarily.&#xD;
&lt;/p&gt;&#xD;
&lt;p&gt;&#xD;
    At the other extreme is&amp;nbsp;beginning development prior to understanding what the system must do.&amp;nbsp; This approach&#xD;
    results in significant, and costly, re-work later in the lifecycle.&#xD;
&lt;/p&gt;&#xD;
&lt;p&gt;&#xD;
    A better approach is to detail only those requirements which will be the focus of development in the next iteration (or&#xD;
    two).&amp;nbsp; Selection of these requirements is driven by value and risk, and thus requires as a minimum an abstract&#xD;
    understanding of the "big-picture".&#xD;
&lt;/p&gt;&#xD;
&lt;p&gt;&#xD;
    The following discussion will outline the approach used to evolve the use-case model to achieve these goals.&#xD;
&lt;/p&gt;&#xD;
&lt;h3&gt;&#xD;
    &lt;a id="How the Use-Case Model Evolves" name="How the Use-Case Model Evolves"&gt;How the Use-Case Model Evolves&lt;/a&gt;&#xD;
&lt;/h3&gt;&#xD;
&lt;p&gt;&#xD;
    The recommended approach to evolving the use-case model takes a "breadth before depth" approach.&amp;nbsp; In this&#xD;
    approach, one identifies the actors and use cases and outlines them quickly.&amp;nbsp; Based on this knowledge, one can&#xD;
    then perform an initial assessment of risk and priorities and thus focus the effort of&amp;nbsp;detailing&amp;nbsp;the use&#xD;
    cases on the right areas.&#xD;
&lt;/p&gt;&#xD;
&lt;h4&gt;&#xD;
    Inception&#xD;
&lt;/h4&gt;&#xD;
&lt;p&gt;&#xD;
    The purpose of inception is to understand the scope of the system.&amp;nbsp; We need to understand the main purpose of the&#xD;
    system, what is within the scope of the system, and what is external to the system.&amp;nbsp; We must strive to list all&#xD;
    the primary actors and use cases, however we don't have the luxury of being able to detail all of these requirements at&#xD;
    this time.&amp;nbsp; Strive to&amp;nbsp;identify by name&amp;nbsp;~80% of the primary actors and use cases and provide a brief&#xD;
    description (one - three sentences) for each.&#xD;
&lt;/p&gt;&#xD;
&lt;blockquote dir="ltr" style="MARGIN-RIGHT: 0px"&gt;&#xD;
    &lt;h5&gt;&#xD;
        Identify stakeholders&#xD;
    &lt;/h5&gt;&#xD;
    &lt;p&gt;&#xD;
        Begin by listing all the external stakeholders for the system.&amp;nbsp; These individuals will be the source of the&#xD;
        requirements.&#xD;
    &lt;/p&gt;&#xD;
    &lt;h5&gt;&#xD;
        Identify Actors&#xD;
    &lt;/h5&gt;&#xD;
    &lt;p&gt;&#xD;
        Name and describe the primary actors.&amp;nbsp; See &lt;a class="elementLinkWithType"&#xD;
        href="./../../../practice.tech.use_case_driven_dev.base/guidances/guidelines/identify_and_outline_actors_and_ucs_BB5516A9.html"&#xD;
         guid="_eyL0wCu-EdqSxKAVa9kmvA"&gt;Guideline: Identify and Outline Actors and Use Cases&lt;/a&gt;.&#xD;
    &lt;/p&gt;&#xD;
    &lt;h5&gt;&#xD;
        Identify Use Cases&#xD;
    &lt;/h5&gt;&#xD;
    &lt;p&gt;&#xD;
        For each actor, ask "what does this actor want to accomplish with the system"?&amp;nbsp; This will reveal the primary&#xD;
        use cases for the system.&amp;nbsp; Name and describe each of these as you discover them.&#xD;
    &lt;/p&gt;&#xD;
    &lt;h5&gt;&#xD;
        Update the Use-Case Model&#xD;
    &lt;/h5&gt;&#xD;
    &lt;p&gt;&#xD;
        Update the use case model to capture the actor and use case names and brief description.&amp;nbsp; Capture the&#xD;
        relationship between the actors and use cases.&#xD;
    &lt;/p&gt;&#xD;
    &lt;h5&gt;&#xD;
        Outline the Basic Flows&#xD;
    &lt;/h5&gt;&#xD;
    &lt;p&gt;&#xD;
        For those use cases that are considered high priority by the stakeholders, or high risk by the development team,&#xD;
        capture a step-by-step description of the Basic Flow.&amp;nbsp; Don't worry about structuring the flow at this&#xD;
        point.&amp;nbsp; Focus on capturing the dialogue between the actor and the system and the key requirements for the&#xD;
        system.&#xD;
    &lt;/p&gt;&#xD;
    &lt;h5&gt;&#xD;
        Identify Alternate Flows&#xD;
    &lt;/h5&gt;&#xD;
    &lt;p&gt;&#xD;
        As you work through the Basic Flows, ask: "What can go wrong?"; "What options are available at this point?";&#xD;
        etc.&amp;nbsp; These types of questions will reveal alternate flows.&amp;nbsp; Capture these, giving each a name and brief&#xD;
        description.&amp;nbsp; Fight the urge to detail these alternate flows at this time.&#xD;
    &lt;/p&gt;&#xD;
    &lt;h5&gt;&#xD;
        Refactor the Use Case Model&#xD;
    &lt;/h5&gt;&#xD;
    &lt;p&gt;&#xD;
        Based on the Basic Flows you have identified, determine if there is common behavior that could be factored out into&#xD;
        &amp;lt;&amp;lt;include&amp;gt;&amp;gt; use cases.&amp;nbsp; Refactor the Use Case model accordingly.&#xD;
    &lt;/p&gt;&#xD;
    &lt;h5&gt;&#xD;
        Prioritize Use Cases&#xD;
    &lt;/h5&gt;&#xD;
    &lt;p&gt;&#xD;
        Given the abstract description you now have of the requirements, work with stakeholders to prioritize the use&#xD;
        cases.&amp;nbsp; This will be the primary input to iteration planning.&#xD;
    &lt;/p&gt;&#xD;
&lt;/blockquote&gt;&#xD;
&lt;h4&gt;&#xD;
    Elaboration&#xD;
&lt;/h4&gt;&#xD;
&lt;blockquote dir="ltr" style="MARGIN-RIGHT: 0px"&gt;&#xD;
    &lt;p&gt;&#xD;
        The purpose of elaboration is to demonstrate the feasibility of&amp;nbsp;the solution prior to committing additional&#xD;
        resources.&amp;nbsp; To be successful, one must demonstrate that stakeholder value can be delivered and that the risk&#xD;
        of continuing is acceptable.&amp;nbsp; We must strive to detail and implement ~20% of the scenarios.&amp;nbsp; These&#xD;
        scenarios must be selected to achieve good coverage of the architecture (for example, a vertical slice through the&#xD;
        architecture, touching as many&amp;nbsp;components and interfaces as possible, is preferred to elaborating the GUI&#xD;
        only).&#xD;
    &lt;/p&gt;&#xD;
    &lt;h5&gt;&#xD;
        Detail Basic Flow&#xD;
    &lt;/h5&gt;&#xD;
    &lt;p&gt;&#xD;
        For those UC selected for the next iteration, spend the time to detail the basic flow now.&amp;nbsp; See &lt;a&#xD;
        class="elementLinkWithType"&#xD;
        href="./../../../practice.tech.use_case_driven_dev.base/guidances/guidelines/detail_ucs_and_scenarios_6BC56BB7.html"&#xD;
         guid="_4BJ_YCxSEdqjsdw1QLH_6Q"&gt;Guideline: Detail Use Cases and Scenarios&lt;/a&gt;.&#xD;
    &lt;/p&gt;&#xD;
    &lt;h5&gt;&#xD;
        Detail Alternate Flow&#xD;
    &lt;/h5&gt;&#xD;
    &lt;p&gt;&#xD;
        For those alternate flows selected for the next iteration, spend the time to detail the flows now.&#xD;
    &lt;/p&gt;&#xD;
    &lt;h5&gt;&#xD;
        Update the Use-Case Model&#xD;
    &lt;/h5&gt;&#xD;
    &lt;p&gt;&#xD;
        Update the Use-Case Model to capture any refinements made as a result of your work.&amp;nbsp; Depending upon the&#xD;
        complexity of the system, you might want to introduce packages to group the use cases in a logical manner to&#xD;
        simplify communications, iteration planning, and parallel development.&#xD;
    &lt;/p&gt;&#xD;
&lt;/blockquote&gt;&#xD;
&lt;h4&gt;&#xD;
    Construction&#xD;
&lt;/h4&gt;&#xD;
&lt;blockquote dir="ltr" style="MARGIN-RIGHT: 0px"&gt;&#xD;
    &lt;p&gt;&#xD;
        The purpose of construction is to incrementally deliver functionality (and value).&amp;nbsp; Working from the iteration&#xD;
        plan, continue detailing the remaining requirements.&amp;nbsp; Shoot for completion of ~90 - ~95% of use cases by the&#xD;
        end of construction.&#xD;
    &lt;/p&gt;&#xD;
    &lt;h5&gt;&#xD;
        Detail Basic Flows&#xD;
    &lt;/h5&gt;&#xD;
    &lt;p&gt;&#xD;
        For those UC selected for the next iteration, spend the time to detail the basic flow now.&amp;nbsp; See &lt;a&#xD;
        class="elementLinkWithType"&#xD;
        href="./../../../practice.tech.use_case_driven_dev.base/guidances/guidelines/detail_ucs_and_scenarios_6BC56BB7.html"&#xD;
         guid="_4BJ_YCxSEdqjsdw1QLH_6Q"&gt;Guideline: Detail Use Cases and Scenarios&lt;/a&gt;.&#xD;
    &lt;/p&gt;&#xD;
    &lt;h5&gt;&#xD;
        Detail Alternate Flows&#xD;
    &lt;/h5&gt;&#xD;
    &lt;p&gt;&#xD;
        For those alternate flows selected for the next iteration, spend the time to detail the flows now.&#xD;
    &lt;/p&gt;&#xD;
    &lt;h5&gt;&#xD;
        Update the Use-Case Model&#xD;
    &lt;/h5&gt;&#xD;
    &lt;p&gt;&#xD;
        Update the Use-Case Model to capture any refinements made as a result of your work.&#xD;
    &lt;/p&gt;&#xD;
&lt;/blockquote&gt;&#xD;
&lt;h4&gt;&#xD;
    Transition&#xD;
&lt;/h4&gt;&#xD;
&lt;p&gt;&#xD;
    The purpose of transition is to make the system operational in its intended environment.&amp;nbsp; Some requirements will&#xD;
    not be covered at this point.&amp;nbsp; But the requirements must clearly not stress the design.&amp;nbsp; The remaining ~5% to&#xD;
    ~10% of use cases must be detailed and implemented in this phase.&#xD;
&lt;/p&gt;&#xD;
&lt;h3&gt;&#xD;
    &lt;a id="Avoiding Functional Decomposition" name="Avoiding Functional Decomposition"&gt;Avoiding Functional&#xD;
    Decomposition&lt;/a&gt;&#xD;
&lt;/h3&gt;&#xD;
&lt;p&gt;&#xD;
    A common pitfall for those new to use-case models is to perform a&amp;nbsp;functional decomposition of the system. This&#xD;
    results in many small "use cases", that on their own do not deliver the "observable result of value" to the&#xD;
    actor.&amp;nbsp; To avoid this, watch for the following symptoms:&#xD;
&lt;/p&gt;&#xD;
&lt;ul&gt;&#xD;
    &lt;li&gt;&#xD;
        &lt;strong&gt;Small&lt;/strong&gt; use cases, meaning that the description of the flow of events is only one or a few&#xD;
        sentences.&#xD;
    &lt;/li&gt;&#xD;
    &lt;li&gt;&#xD;
        &lt;strong&gt;Many&lt;/strong&gt; use cases, meaning that the number of use cases is some multiple of a hundred, rather than a&#xD;
        multiple of ten.&#xD;
    &lt;/li&gt;&#xD;
    &lt;li&gt;&#xD;
        Use-case names that are constructions such as "do this operation on this particular data" or "do this function with&#xD;
        this particular data". For example, "Enter Personal Identification Number in an ATM machine" must not be modeled as&#xD;
        a separate use case for the ATM machine, because no one would use the system to do just this. A use case is a&#xD;
        complete flow of events that results in something of value to an actor.&#xD;
    &lt;/li&gt;&#xD;
&lt;/ul&gt;&#xD;
&lt;p&gt;&#xD;
    To avoid functional decomposition, make sure that the use-case model helps answer these kinds of questions:&#xD;
&lt;/p&gt;&#xD;
&lt;ul&gt;&#xD;
    &lt;li&gt;&#xD;
        What is the context of the system?&#xD;
    &lt;/li&gt;&#xD;
    &lt;li&gt;&#xD;
        Why are you building this system?&#xD;
    &lt;/li&gt;&#xD;
    &lt;li&gt;&#xD;
        What does the user want the system to do?&#xD;
    &lt;/li&gt;&#xD;
    &lt;li&gt;&#xD;
        How&amp;nbsp;do the users benefit from the system?&#xD;
    &lt;/li&gt;&#xD;
&lt;/ul&gt;&#xD;
&lt;h3&gt;&#xD;
    &lt;a id="Structuring the Use-Case Model" name="Structuring the Use-Case Model"&gt;Structuring the Use-Case Model&lt;/a&gt;&#xD;
&lt;/h3&gt;&#xD;
&lt;p&gt;&#xD;
    There are three main reasons for structuring the use-case model:&#xD;
&lt;/p&gt;&#xD;
&lt;ul&gt;&#xD;
    &lt;li&gt;&#xD;
        To make the use cases easier to understand.&#xD;
    &lt;/li&gt;&#xD;
    &lt;li&gt;&#xD;
        To partition common behavior described within many use cases.&#xD;
    &lt;/li&gt;&#xD;
    &lt;li&gt;&#xD;
        To make the use-case model easier to maintain.&#xD;
    &lt;/li&gt;&#xD;
&lt;/ul&gt;&#xD;
&lt;p&gt;&#xD;
    Structuring is not the first thing you do, however. There is no point in structuring the use cases until you know a bit&#xD;
    more about their behavior than a one-sentence description. Establishing a step-by-step outline of the flow of events&#xD;
    can assure your decisions are based on an accurate understanding of the behavior&#xD;
&lt;/p&gt;&#xD;
&lt;p&gt;&#xD;
    There are several advanced modeling concepts available in the literature for&amp;nbsp;structuring the use-case model,&#xD;
    however, following the principle of "keep-it-simple" only the most useful of these, namely the &amp;lt;&amp;lt;include&amp;gt;&amp;gt;&#xD;
    relationship is discussed in this process.&amp;nbsp; This relationship permits one to factor out common behavior into a&#xD;
    separate use case that is "include" in other use cases.&amp;nbsp; See &lt;a class="elementLinkWithType"&#xD;
    href="./../../../core.tech.common.extend_supp/guidances/concepts/use_case_model_CD178AF9.html"&#xD;
    guid="_2jyfUAhVEduRe8TeoBmuGg"&gt;Concept: Use-Case Model&lt;/a&gt;&amp;nbsp;for more&amp;nbsp;details.&#xD;
&lt;/p&gt;&#xD;
&lt;p&gt;&#xD;
    Another aspect of&amp;nbsp;structuring the use-case model for easier understanding is grouping the use cases into packages.&#xD;
    The use-case model can be organized as a hierarchy of use-case packages. For more information on use-case packages, see&#xD;
    &lt;a class="elementLinkWithType"&#xD;
    href="./../../../core.tech.common.extend_supp/guidances/concepts/use_case_model_CD178AF9.html"&#xD;
    guid="_2jyfUAhVEduRe8TeoBmuGg"&gt;Concept: Use-Case Model&lt;/a&gt;.&#xD;
&lt;/p&gt;&#xD;
&lt;h3&gt;&#xD;
    &lt;a id="Use Cases Are Always Related to Actors" name="Use Cases Are Always Related to Actors"&gt;Relationship Between Use&#xD;
    Cases and Actors&lt;/a&gt;&#xD;
&lt;/h3&gt;&#xD;
&lt;p&gt;&#xD;
    Running each use case includes communication with one or more actors. A use-case instance is always started by an actor&#xD;
    asking the system to do something. This implies that every use case must have communicates-associations with actors.&#xD;
    The reason for this rule is to enforce that the system provides only the functionality that users need and nothing&#xD;
    else. Having use cases that no one requests is an indication that something is wrong in the use-case model or in the&#xD;
    requirements.&#xD;
&lt;/p&gt;&#xD;
&lt;p&gt;&#xD;
    However, there are some exceptions to this rule:&#xD;
&lt;/p&gt;&#xD;
&lt;ul&gt;&#xD;
    &lt;li&gt;&#xD;
        An&amp;nbsp;"included" use case might not interact with an actor if the base use case does.&#xD;
    &lt;/li&gt;&#xD;
    &lt;li&gt;&#xD;
        A use case can be initiated according to a schedule (for example, once a week or once a day), which means that the&#xD;
        system clock is the initiator. The system clock is internal to the system; therefore, the use case is not initiated&#xD;
        by an actor but by an internal system event. If no other actor interaction occurs in the use case, it will not have&#xD;
        any associations to actors. However, for clarity, you can use "time" as an actor to show how the use case is&#xD;
        initiated in your use-case diagrams. &lt;strong&gt;CAUTION:&lt;/strong&gt; if you have a lot of "time" actors in your model,&#xD;
        challenge them.&amp;nbsp; Perhaps you missed a real actor, such as an administrator responsible for scheduling reports,&#xD;
        etc.&#xD;
    &lt;/li&gt;&#xD;
&lt;/ul&gt;</mainDescription>
</org.eclipse.epf.uma:ContentDescription>