<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmi:id="-BdYFG4-dbPBGFzF9z6KGPA" name="supporting_requirements,_wr24gNcGEdqz_d2XWoVt6Q" guid="-BdYFG4-dbPBGFzF9z6KGPA" changeDate="2009-03-28T18:35:12.000+0100" version="1.0.0" mainDescription="&lt;p>&#xD;&#xA;    There is a finite set of requirements to consider when it comes to gathering system-wide requirements, qualities, or&#xD;&#xA;    constraints. Many of them are unfamiliar to stakeholders; therefore, they&amp;nbsp;might find it difficult to answer&#xD;&#xA;    questions related to topics such as availability, performance, scalability, or localization. You can use this guideline&#xD;&#xA;    and the associated checklist &lt;a class=&quot;elementLinkWithType&quot;&#xD;&#xA;    href=&quot;./../../../core.tech.common.extend_supp/guidances/checklists/system_wide_rqmts_furps_3158BF2F.html&quot;&#xD;&#xA;    guid=&quot;_Vael8CGMEdu3VKXZx45D3A&quot;>Checklist: System-Wide Requirements (FURPS+)&lt;/a>&amp;nbsp;when speaking to stakeholders to&#xD;&#xA;    ensure that all topics are discussed. Make sure that stakeholders understand the costs of their selections and do not&#xD;&#xA;    end up wanting everything that is on the list.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;h3>&#xD;&#xA;    Functional&#xD;&#xA;&lt;/h3>&#xD;&#xA;&lt;ul>&#xD;&#xA;    &lt;li>&#xD;&#xA;        &lt;p>&#xD;&#xA;            &lt;strong>Auditing:&lt;/strong> Is there a need to track who used the system and when they used it? State&#xD;&#xA;            requirements for providing audit trails when running the system.&#xD;&#xA;        &lt;/p>&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        &lt;p>&#xD;&#xA;            &lt;strong>Authentication:&lt;/strong> Will access to the system be controlled? State requirements for&#xD;&#xA;            authentication.&#xD;&#xA;        &lt;/p>&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        &lt;p>&#xD;&#xA;            &lt;strong>Licensing:&lt;/strong> Will the system or parts of the system be licensed? If open-source software has&#xD;&#xA;            been used in the system, have all open-source agreements been respected? State requirements for acquiring,&#xD;&#xA;            installing, tracking, and monitoring licenses.&#xD;&#xA;        &lt;/p>&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        &lt;p>&#xD;&#xA;            &lt;strong>Printing:&lt;/strong> Will printing capability be required? State requirements for printing.&#xD;&#xA;        &lt;/p>&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        &lt;p>&#xD;&#xA;            &lt;strong>Reporting:&lt;/strong> Is reporting capability required? State requirements for reporting.&#xD;&#xA;        &lt;/p>&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        &lt;p>&#xD;&#xA;            &lt;strong>Scheduling:&lt;/strong> Will certain system actions need to be scheduled? State requirements for&#xD;&#xA;            scheduling capability.&#xD;&#xA;        &lt;/p>&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        &lt;p>&#xD;&#xA;            &lt;strong>Security:&lt;/strong> Will elements of the system or system data need to be secure? State requirements to&#xD;&#xA;            protect access to certain resources or information.&#xD;&#xA;        &lt;/p>&#xD;&#xA;    &lt;/li>&#xD;&#xA;&lt;/ul>&#xD;&#xA;&lt;h3>&#xD;&#xA;    Usability&#xD;&#xA;&lt;/h3>&#xD;&#xA;&lt;p>&#xD;&#xA;    Usability requirements are critical to the success of any system. Unfortunately, usability requirements are often the&#xD;&#xA;    most poorly specified requirements. Consider this common requirement: The system shall be easy to use. This doesn't&#xD;&#xA;    help much, because it cannot be verified.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;p>&#xD;&#xA;    While capturing usability requirements, it is a good idea to identify issues and concerns first, and then refine these&#xD;&#xA;    into verifiable requirements later (see &lt;a class=&quot;elementLinkWithType&quot;&#xD;&#xA;    href=&quot;./../../../core.tech.common.extend_supp/guidances/guidelines/writing_good_requirements_48248536.html&quot;&#xD;&#xA;    guid=&quot;_6jXzYNcKEdqz_d2XWoVt6Q&quot;>Guideline: Writing Requirements Statements&lt;/a>). According to a traditional definition,&#xD;&#xA;    usability consists of five factors:&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;ul>&#xD;&#xA;    &lt;li>&#xD;&#xA;        &lt;p>&#xD;&#xA;            &lt;strong>Ease of learning:&lt;/strong> A user with a specified level of experience must be able to learn how to use&#xD;&#xA;            the system in a specified amount of time.&#xD;&#xA;        &lt;/p>&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        &lt;p>&#xD;&#xA;            &lt;strong>Task efficiency:&lt;/strong> A user must be able to complete a specified task in a specified time (or&#xD;&#xA;            number of mouse clicks).&#xD;&#xA;        &lt;/p>&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        &lt;p>&#xD;&#xA;            &lt;strong>Ease of remembering:&lt;/strong> A user must be able to remember how to accomplish specified tasks after&#xD;&#xA;            not using the system for a specified period of time.&#xD;&#xA;        &lt;/p>&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        &lt;p>&#xD;&#xA;            &lt;strong>Understandability:&lt;/strong> A user must be able to understand system prompts and messages and what the&#xD;&#xA;            system does.&#xD;&#xA;        &lt;/p>&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        &lt;p>&#xD;&#xA;            &lt;strong>Subjective satisfaction:&lt;/strong> A specified percentage of the user community must express&#xD;&#xA;            satisfaction with using the system.&#xD;&#xA;        &lt;/p>&#xD;&#xA;    &lt;/li>&#xD;&#xA;&lt;/ul>&#xD;&#xA;&lt;p>&#xD;&#xA;    You might want to use the following method to identify and specify usability requirements:&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;div style=&quot;MARGIN-LEFT: 2em&quot;>&#xD;&#xA;    &lt;ol>&#xD;&#xA;        &lt;li>&#xD;&#xA;            Identify the key usability issues by looking at critical tasks, user profiles, system goals, and previous&#xD;&#xA;            usability problems.&#xD;&#xA;        &lt;/li>&#xD;&#xA;        &lt;li>&#xD;&#xA;            Choose the appropriate style to express the requirements: &#xD;&#xA;            &lt;ul>&#xD;&#xA;                &lt;li>&#xD;&#xA;                    &lt;strong>Performance style:&lt;/strong> Specify how fast users can learn various tasks and how fast they&#xD;&#xA;                    can perform the tasks after training.&#xD;&#xA;                &lt;/li>&#xD;&#xA;                &lt;li>&#xD;&#xA;                    &lt;strong>Defect style:&lt;/strong> Rather than measuring task times, identify usability defects and&#xD;&#xA;                    specifies how frequently they can occur.&#xD;&#xA;                &lt;/li>&#xD;&#xA;                &lt;li>&#xD;&#xA;                    &lt;strong>Guideline style:&lt;/strong> Specify the general appearance and response time of the user&#xD;&#xA;                    interface by reference to an accepted and well-defined standard&#xD;&#xA;                &lt;/li>&#xD;&#xA;            &lt;/ul>&#xD;&#xA;        &lt;/li>&#xD;&#xA;        &lt;li>&#xD;&#xA;            Write the actual requirements, including performance criteria (see &lt;a class=&quot;elementLinkWithType&quot;&#xD;&#xA;            href=&quot;./../../../core.tech.common.extend_supp/guidances/guidelines/writing_good_requirements_48248536.html&quot;&#xD;&#xA;            guid=&quot;_6jXzYNcKEdqz_d2XWoVt6Q&quot;>Guideline: Writing Requirements Statements&lt;/a>&amp;nbsp;for more information).&#xD;&#xA;        &lt;/li>&#xD;&#xA;    &lt;/ol>&#xD;&#xA;&lt;/div>&#xD;&#xA;&lt;h3>&#xD;&#xA;    Reliability&#xD;&#xA;&lt;/h3>&#xD;&#xA;&lt;p>&#xD;&#xA;    Reliability includes the system's ability to continue running under stress and adverse conditions. In the case of an&#xD;&#xA;    application, reliability relates to the amount of time that the software is available and running as opposed to time&#xD;&#xA;    unavailable. Specify reliability acceptance levels, as well as how they will be measured and evaluated. Describe&#xD;&#xA;    reliability criteria in measurable terms. This is usually expressed as the allowable time between failures or the total&#xD;&#xA;    allowable failure rate. Other important reliability considerations include:&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;ul>&#xD;&#xA;    &lt;li>&#xD;&#xA;        &lt;p>&#xD;&#xA;            &lt;strong>Accuracy:&lt;/strong> Specify requirements for the precision (resolution) and the accuracy (by some known&#xD;&#xA;            standard) that is required in any calculation performed or in system output.&#xD;&#xA;        &lt;/p>&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        &lt;p>&#xD;&#xA;            &lt;strong>Availability:&lt;/strong> Specify requirements for the percentage of time the system is available for use,&#xD;&#xA;            hours of use, maintenance access, and degraded-mode operations. Availability is typically specified in terms of&#xD;&#xA;            the Mean Time Between Failures (MTBF).&#xD;&#xA;        &lt;/p>&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        &lt;p>&#xD;&#xA;            &lt;strong>Recoverability:&lt;/strong> Specify requirements for recovery from failure. This is typically specified in&#xD;&#xA;            terms of the Mean Time to Repair (MTTR).&#xD;&#xA;        &lt;/p>&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        &lt;p>&#xD;&#xA;            &lt;strong>Frequency and severity of failures:&lt;/strong> Specify the maximum defect rate (typically expressed as&#xD;&#xA;            defects/KSLOC or defects/function-point) and severity of failures. Severity&amp;nbsp;can be categorized in terms of&#xD;&#xA;            &lt;strong>minor&lt;/strong>, &lt;strong>significant&lt;/strong>, and &lt;strong>critical&lt;/strong> defects. The requirements&#xD;&#xA;            must define each of these terms unambiguously. For example, a &lt;strong>critical&lt;/strong> defect could be defined&#xD;&#xA;            as one that results in loss of data or complete inability to use certain functionality of the system.&#xD;&#xA;        &lt;/p>&#xD;&#xA;    &lt;/li>&#xD;&#xA;&lt;/ul>&#xD;&#xA;&lt;h3>&#xD;&#xA;    Performance&#xD;&#xA;&lt;/h3>&#xD;&#xA;&lt;ul>&#xD;&#xA;    &lt;li>&#xD;&#xA;        &lt;p>&#xD;&#xA;            &lt;strong>Response times:&lt;/strong> Specify the amount of time available for the system to complete specified&#xD;&#xA;            tasks and transactions (average, maximum). Use units of measurement. &lt;em>Examples:&lt;/em>&#xD;&#xA;        &lt;/p>&#xD;&#xA;        &lt;ul>&#xD;&#xA;            &lt;li>&#xD;&#xA;                Any interface between a user and the system shall have a maximum response time of 2 seconds.&#xD;&#xA;            &lt;/li>&#xD;&#xA;            &lt;li>&#xD;&#xA;                The product shall download the new status parameters within 5 minutes of a change.&lt;br />&#xD;&#xA;            &lt;/li>&#xD;&#xA;        &lt;/ul>&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        &lt;strong>Throughput:&lt;/strong> Specify the capacity of the system to support a given flow of information (for&#xD;&#xA;        example, transactions per second).&lt;br />&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        &lt;strong>Capacity:&lt;/strong> Specify on the volumes that the product must be able to deal with and the numbers of&#xD;&#xA;        data stored by the product. Make sure that the requirement description is quantified, and thus can be tested. Use&#xD;&#xA;        unit of measurement such as: the number of customers or transactions the system can accommodate, resource usage&#xD;&#xA;        (memory, disk, . . . ), or degradation modes (what is the acceptable mode of operation when the system has been&#xD;&#xA;        degraded in some manner) &lt;em>Examples:&lt;/em> &#xD;&#xA;        &lt;ul>&#xD;&#xA;            &lt;li>&#xD;&#xA;                The product shall cater for 300 simultaneous users within the period from 9:00 AM to 11 AM.&#xD;&#xA;            &lt;/li>&#xD;&#xA;            &lt;li>&#xD;&#xA;                Maximum loading at other periods will be 150.&lt;br />&#xD;&#xA;            &lt;/li>&#xD;&#xA;        &lt;/ul>&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        &lt;strong>Start-up:&lt;/strong> The time for the system to start up.&lt;br />&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        &lt;strong>Shut-down:&lt;/strong> The time for the system to shut down.&#xD;&#xA;    &lt;/li>&#xD;&#xA;&lt;/ul>&#xD;&#xA;&lt;h3>&#xD;&#xA;    Supportability&#xD;&#xA;&lt;/h3>&#xD;&#xA;&lt;ul>&#xD;&#xA;    &lt;li>&#xD;&#xA;        &lt;p>&#xD;&#xA;            &lt;strong>Adaptability:&lt;/strong> Are there any special requirements regarding adaptation of the software&#xD;&#xA;            (including upgrading)? List requirements for the ease with which the system is adapted to new environments.&#xD;&#xA;        &lt;/p>&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        &lt;p>&#xD;&#xA;            &lt;strong>Compatibility:&lt;/strong> Are there any requirements regarding this system and its compatibility with&#xD;&#xA;            previous versions of this system or legacy systems that provide the same capability?&#xD;&#xA;        &lt;/p>&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        &lt;p>&#xD;&#xA;            &lt;strong>Configurability:&lt;/strong> Will the product be configured after it has been deployed? In what way will&#xD;&#xA;            the system be configured?&#xD;&#xA;        &lt;/p>&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        &lt;p>&#xD;&#xA;            &lt;strong>Installation:&lt;/strong> State any special requirements regarding system installation&#xD;&#xA;        &lt;/p>&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        &lt;strong>Level of Support:&lt;/strong> What is the level of support that the product requires? This is often performed&#xD;&#xA;        using a Help desk. If there are to be people who provide support for the product, is that support considered part&#xD;&#xA;        of what you are providing to the customer? Are there any requirements for that support? You might also build&#xD;&#xA;        support into the product itself, in which case this is the place to write those requirements. Consider the level of&#xD;&#xA;        support that you anticipate providing and what forms it might take.&lt;br />&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        &lt;strong>Maintainability:&lt;/strong> Are there any special requirements regarding system maintenance? What are the&#xD;&#xA;        requirements for the intended release cycle for the product and the form that the release will take? Quantify the&#xD;&#xA;        time necessary to make specified changes to the product. There can also be special requirements for&#xD;&#xA;        maintainability, such as&amp;nbsp;a requirement that&amp;nbsp;the product must be able to be maintained by its end-users or&#xD;&#xA;        developers who are not your development team. This has an effect on the way that the product is developed, and&#xD;&#xA;        there can be additional requirements for documentation or training. Describe the type of maintenance and the amount&#xD;&#xA;        of effort required. &lt;em>Examples:&lt;/em>&lt;br />&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li style=&quot;LIST-STYLE-TYPE: none&quot;>&#xD;&#xA;        &lt;ul>&#xD;&#xA;            &lt;li>&#xD;&#xA;                A new weather station must be able to be added to the system overnight.&#xD;&#xA;            &lt;/li>&#xD;&#xA;            &lt;li>&#xD;&#xA;                The maintenance releases will be offered to end-users once a year.&lt;br />&#xD;&#xA;            &lt;/li>&#xD;&#xA;        &lt;/ul>&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        &lt;strong>Scalability:&lt;/strong> What volumes of users and data will the system support? This specifies the expected&#xD;&#xA;        increases in size that the product must be able to handle As businesses grow (or are expected to grow), the&#xD;&#xA;        software products must increase their capacities to cope with the new volumes. This can be expressed as a profile&#xD;&#xA;        over time.&lt;br />&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        &lt;strong>Testability:&lt;/strong> Are there any special requirements regarding the testability of the system?&#xD;&#xA;    &lt;/li>&#xD;&#xA;&lt;/ul>&#xD;&#xA;&lt;h3>&#xD;&#xA;    Constraints (+)&#xD;&#xA;&lt;/h3>&#xD;&#xA;&lt;ul>&#xD;&#xA;    &lt;li>&#xD;&#xA;        &lt;p>&#xD;&#xA;            &lt;strong>Design constraints:&lt;/strong> Are there any design decisions that have been mandated that the product&#xD;&#xA;            must adhered to?&#xD;&#xA;        &lt;/p>&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        &lt;p>&#xD;&#xA;            &lt;strong>Third-party components:&lt;/strong> Specify any mandated legacy, COTS, or open-source components to be&#xD;&#xA;            used with the system.&#xD;&#xA;        &lt;/p>&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        &lt;p>&#xD;&#xA;            &lt;strong>Implementation languages:&lt;/strong> Specify requirements on the implementation languages to be used&#xD;&#xA;        &lt;/p>&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        &lt;p>&#xD;&#xA;            &lt;strong>Platform support:&lt;/strong> Specify requirements on the platforms that the system will support&#xD;&#xA;        &lt;/p>&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        &lt;p>&#xD;&#xA;            &lt;strong>Resource limits:&lt;/strong> Specify requirements on the use of system resources, such as memory and hard&#xD;&#xA;            disk space&#xD;&#xA;        &lt;/p>&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        &lt;p>&#xD;&#xA;            &lt;strong>Physical Constraints:&lt;/strong> Specify requirements on the shape, size, and weight of the resulting&#xD;&#xA;            hardware to house the system&#xD;&#xA;        &lt;/p>&#xD;&#xA;    &lt;/li>&#xD;&#xA;&lt;/ul>&#xD;&#xA;&lt;h3>&#xD;&#xA;    Interface Requirements (+)&#xD;&#xA;&lt;/h3>&#xD;&#xA;&lt;p>&#xD;&#xA;    Describe both the user interface and interfaces with external systems.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;h4>&#xD;&#xA;    User interface&#xD;&#xA;&lt;/h4>&#xD;&#xA;&lt;p>&#xD;&#xA;    Describe requirements related to user interfaces that are to be implemented by the software. The intention of this&#xD;&#xA;    section is to state the requirements, but not to describe the user interface itself, because interface design can&#xD;&#xA;    overlap the requirements-gathering process. This is particularly true if you are using prototyping as part of your&#xD;&#xA;    requirements gathering process. As you develop prototypes, it is important to capture the requirements that relate to&#xD;&#xA;    the look and feel of the user interface. In other words, be sure that you understand your client's intentions for the&#xD;&#xA;    product's look and feel. Record these as requirements, rather than merely using a prototype for approval.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;ul>&#xD;&#xA;    &lt;li>&#xD;&#xA;        &lt;p>&#xD;&#xA;            &lt;strong>Look and feel:&lt;/strong> A description of the aesthetic appearance and layout of the interface. Your&#xD;&#xA;            client might have given you particular demands, such as style, colors, degree of interaction, and so on. This&#xD;&#xA;            section captures the requirements for the interface, rather than the design for the interface. The motivation&#xD;&#xA;            is to capture the expectations, the constraints, and the client's demands for the interface before designing&#xD;&#xA;            it. &lt;em>Examples:&lt;/em>&#xD;&#xA;        &lt;/p>&#xD;&#xA;        &lt;ul>&#xD;&#xA;            &lt;li>&#xD;&#xA;                The product shall have the same layout as the district maps from the engineering department.&#xD;&#xA;            &lt;/li>&#xD;&#xA;            &lt;li>&#xD;&#xA;                The product shall use the company color.&lt;br />&#xD;&#xA;            &lt;/li>&#xD;&#xA;        &lt;/ul>&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        &lt;strong>Layout and navigation requirements:&lt;/strong> Specify requirements on major screen areas and how they must&#xD;&#xA;        be grouped together.&lt;br />&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        &lt;strong>Consistency:&lt;/strong> Consistency in the user interface enables users to predict what will happen. This&#xD;&#xA;        section states requirements on the use of mechanisms to be employed in the user interface. This applies both within&#xD;&#xA;        the system, and with other systems and can be applied at different levels: navigation controls, screen areas sizes&#xD;&#xA;        and shapes, placements for entering / presenting data, terminology&lt;br />&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        &lt;strong>User personalization and customization requirements:&lt;/strong> Requirements on content that must&#xD;&#xA;        automatically displayed to users or available based on user attributes. Sometimes users allowed to customize the&#xD;&#xA;        content displayed or to personalize displayed content.&#xD;&#xA;    &lt;/li>&#xD;&#xA;&lt;/ul>&#xD;&#xA;&lt;h4>&#xD;&#xA;    Interfaces to external systems or devices&#xD;&#xA;&lt;/h4>&#xD;&#xA;&lt;ul>&#xD;&#xA;    &lt;li>&#xD;&#xA;        &lt;p>&#xD;&#xA;            &lt;strong>Software interfaces:&lt;/strong> Are there any external systems with which this system must interface? Are&#xD;&#xA;            there any constraints on the nature of the interface between this system and any external system, such as the&#xD;&#xA;            format of data passed between these systems? Do they use any particular protocol? Describe software interfaces&#xD;&#xA;            with other components. These can be purchased components, components reused from another application, or&#xD;&#xA;            components being developed for subsystems outside of the scope of the system under consideration, but with&#xD;&#xA;            which this it must interact. For each system, consider both provided and required interfaces.&#xD;&#xA;        &lt;/p>&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        &lt;p>&#xD;&#xA;            &lt;strong>Hardware interfaces:&lt;/strong> Define any hardware interfaces that are to be supported by the software,&#xD;&#xA;            including logical structure, physical addresses, expected behavior, and so on.&#xD;&#xA;        &lt;/p>&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        &lt;p>&#xD;&#xA;            &lt;strong>Communications interfaces:&lt;/strong> Describe any communications interfaces to other systems or devices,&#xD;&#xA;            such as local area networks (LANs), remote serial devices, and so on.&#xD;&#xA;        &lt;/p>&#xD;&#xA;    &lt;/li>&#xD;&#xA;&lt;/ul>&#xD;&#xA;&lt;h3>&#xD;&#xA;    Business Rules (+)&#xD;&#xA;&lt;/h3>&#xD;&#xA;&lt;p>&#xD;&#xA;    Besides technical requirements, also consider the particular business domain in which the system needs to fit.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;p>&#xD;&#xA;    Business rules or policies that the system must conform to can constrain system functionality. Business rules are&#xD;&#xA;    referred to by system use cases and can be in the form of decision tables, computation rules, decision trees,&#xD;&#xA;    algorithms, and so forth. Describing the rules in the flows of the use cases usually clutters the use-case&#xD;&#xA;    specifications. Therefore, they are normally captured in separate artifacts or as annexes related to the use-case&#xD;&#xA;    specifications. In many cases, a business rule applies to more then one use case. Shared business rules must be stored&#xD;&#xA;    in a single repository or&amp;nbsp;document.&#xD;&#xA;&lt;/p>" longPresentationName="supporting_requirements,_wr24gNcGEdqz_d2XWoVt6Q"/>
