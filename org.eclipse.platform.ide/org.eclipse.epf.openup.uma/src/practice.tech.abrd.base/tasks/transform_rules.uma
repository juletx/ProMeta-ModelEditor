<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:TaskDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmi:id="-kaG_G7QLbZmoHMO8_47GiQ" name=",_8mZw8DmhEdy8N6BRpa8ByQ" guid="-kaG_G7QLbZmoHMO8_47GiQ" authors="Jerome Boyer" changeDate="2008-09-08T20:02:32.000+0200" version="7.5.0" mainDescription="&lt;p>&#xA;    Rule Analyst has to study the rule discovered and try to transform it so that the implementation and the management of&#xA;    the rule will be more easy. This includes transforming the rule in atomic element using a syntax without ambiguity,&#xA;    remove redundant rules, conflicting rules, and finally try to redefine the scope of the rule by searching by&#xA;    non-handled cases.&amp;nbsp;&#xA;&lt;/p>&#xA;&lt;p>&#xA;    At this stage rule analyst can build some rule template which&amp;nbsp;are built from rules that have the same set of&#xA;    conditions with some little variations: adding new value in test condition, or new condition.&#xA;&lt;/p>" keyConsiderations="This activity will also be done during the implementation of the rule set, but it is started during the analysis, so we are&#xA;detailing it in this context." longPresentationName=",_8mZw8DmhEdy8N6BRpa8ByQ" purpose="&lt;p class=&quot;MsoNormal&quot; style=&quot;MARGIN: 3pt 0cm&quot;>&#xA;    The goal of the this task is to transform the rule in an artifact the business user can understand, and rule writer can&#xA;    understand, implement, test and maintain.&#xA;&lt;/p>">
  <sections xmi:id="_7HEPsDmiEdy8N6BRpa8ByQ" name="Refine Rule as Atomic" guid="_7HEPsDmiEdy8N6BRpa8ByQ" variabilityBasedOnElement="_7HEPsDmiEdy8N6BRpa8ByQ" sectionDescription="&lt;p class=&quot;MsoNormal&quot; style=&quot;MARGIN: 3pt 0cm; mso-list: l0 level2 lfo1; tab-stops: list 72.0pt&quot; type=&quot;disc&quot;>&#xD;&#xA;    &lt;span&#xD;&#xA;    style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: Arial; mso-fareast-font-family: 'Times New Roman'; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA&quot;>A&#xD;&#xA;    rule is atomic if it cannot be further decomposed without losing meaning. Atomicity is desired for understandability,&#xD;&#xA;    ease of maintenance&lt;/span>&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;div style=&quot;MARGIN-TOP: 0cm; MARGIN-LEFT: 2em&quot; type=&quot;disc&quot;>&#xD;&#xA;    &lt;ul style=&quot;MARGIN-TOP: 0cm&quot; type=&quot;disc&quot;>&#xD;&#xA;        &lt;li class=&quot;MsoNormal&quot; style=&quot;MARGIN: 3pt 0cm; mso-list: l0 level2 lfo1; tab-stops: list 72.0pt&quot;>&#xD;&#xA;            Make sure each rule has one result&#xD;&#xA;        &lt;/li>&#xD;&#xA;        &lt;li class=&quot;MsoNormal&quot; style=&quot;MARGIN: 3pt 0cm; mso-list: l0 level2 lfo1; tab-stops: list 72.0pt&quot;>&#xD;&#xA;            When expressed an inference rule or an action enabler, do not allow ANDs on the right hand side; break the rule&#xD;&#xA;        &lt;/li>&#xD;&#xA;        &lt;li style=&quot;LIST-STYLE-TYPE: none&quot;>&#xD;&#xA;            &lt;ul style=&quot;MARGIN-TOP: 0cm&quot; type=&quot;disc&quot;>&#xD;&#xA;                &lt;li class=&quot;MsoNormal&quot; style=&quot;MARGIN: 3pt 0cm; mso-list: l0 level3 lfo1; tab-stops: list 108.0pt&quot;>&#xD;&#xA;                    IF A THEN do(B) AND do(C)&lt;span style=&quot;mso-spacerun: yes&quot;>&amp;nbsp;&amp;nbsp;&lt;/span> can be rewritten as two&#xD;&#xA;                    rules IF A THEN do(B) and IF A THEN do(C)&#xD;&#xA;                &lt;/li>&#xD;&#xA;            &lt;/ul>&#xD;&#xA;        &lt;/li>&#xD;&#xA;        &lt;li class=&quot;MsoNormal&quot; style=&quot;MARGIN: 3pt 0cm; mso-list: l0 level2 lfo1; tab-stops: list 72.0pt&quot;>&#xD;&#xA;            When expressing an inference rule or an action enabler, do not allow ORs on the left hand side; break the rule&#xD;&#xA;        &lt;/li>&#xD;&#xA;        &lt;li style=&quot;LIST-STYLE-TYPE: none&quot;>&#xD;&#xA;            &lt;ul style=&quot;MARGIN-TOP: 0cm&quot; type=&quot;disc&quot;>&#xD;&#xA;                &lt;li class=&quot;MsoNormal&quot; style=&quot;MARGIN: 3pt 0cm; mso-list: l0 level3 lfo1; tab-stops: list 108.0pt&quot;>&#xD;&#xA;                    IF A OR B THEN do(C) can be rewritten as two rules IF A THEN do(C) and IF B THEN do(C)&#xD;&#xA;                &lt;/li>&#xD;&#xA;            &lt;/ul>&#xD;&#xA;        &lt;/li>&#xD;&#xA;        &lt;li class=&quot;MsoNormal&quot; style=&quot;MARGIN: 3pt 0cm; mso-list: l0 level2 lfo1; tab-stops: list 72.0pt&quot;>&#xD;&#xA;            When expressing constraints and guidelines, do not allow for ANDs&#xD;&#xA;        &lt;/li>&#xD;&#xA;        &lt;li style=&quot;LIST-STYLE-TYPE: none&quot;>&#xD;&#xA;            &lt;ul style=&quot;MARGIN-TOP: 0cm&quot; type=&quot;disc&quot;>&#xD;&#xA;                &lt;li class=&quot;MsoNormal&quot; style=&quot;MARGIN: 3pt 0cm; mso-list: l0 level3 lfo1; tab-stops: list 108.0pt&quot;>&#xD;&#xA;                    A driver must be 25 years old or older AND must have good credit rating&#xD;&#xA;                &lt;/li>&#xD;&#xA;                &lt;li class=&quot;MsoNormal&quot; style=&quot;MARGIN: 3pt 0cm; mso-list: l0 level3 lfo1; tab-stops: list 108.0pt&quot;>&#xD;&#xA;                    A driver must be 25 years old or older; a driver must have good credit rating&#xD;&#xA;                &lt;/li>&#xD;&#xA;            &lt;/ul>&#xD;&#xA;        &lt;/li>&#xD;&#xA;        &lt;li class=&quot;MsoNormal&quot; style=&quot;MARGIN: 3pt 0cm; mso-list: l0 level2 lfo1; tab-stops: list 72.0pt&quot;>&#xD;&#xA;            Make sure that each rule contains only necessary conditions; don't over-constrain the rule applicability&#xD;&#xA;        &lt;/li>&#xD;&#xA;    &lt;/ul>&#xD;&#xA;&lt;/div>"/>
  <sections xmi:id="_tFwpYDmoEdy8N6BRpa8ByQ" name="Remove redundant rules" guid="_tFwpYDmoEdy8N6BRpa8ByQ" variabilityBasedOnElement="_tFwpYDmoEdy8N6BRpa8ByQ" sectionDescription="&lt;p class=&quot;MsoNormal&quot; style=&quot;MARGIN: 3pt 0cm 3pt 18pt&quot;>&#xD;&#xA;    This step is important to avoid developing complex rule sets. Redundant rules are&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;div style=&quot;MARGIN-TOP: 0cm; MARGIN-LEFT: 2em&quot; type=&quot;disc&quot;>&#xD;&#xA;    &lt;ul style=&quot;MARGIN-TOP: 0cm&quot; type=&quot;disc&quot;>&#xD;&#xA;        &lt;li class=&quot;MsoNormal&quot; style=&quot;MARGIN: 3pt 0cm; mso-list: l0 level2 lfo1; tab-stops: list 72.0pt&quot;>&#xD;&#xA;            Duplicated rules&#xD;&#xA;        &lt;/li>&#xD;&#xA;        &lt;li class=&quot;MsoNormal&quot; style=&quot;MARGIN: 3pt 0cm; mso-list: l0 level2 lfo1; tab-stops: list 72.0pt&quot;>&#xD;&#xA;            Duplicated through some transformations (renaming, inversion of conditions, etc.)&#xD;&#xA;        &lt;/li>&#xD;&#xA;        &lt;li class=&quot;MsoNormal&quot; style=&quot;MARGIN: 3pt 0cm; mso-list: l0 level2 lfo1; tab-stops: list 72.0pt&quot;>&#xD;&#xA;            Redundancies among rules that create a common data value or a common truth value, or initiate a common action&#xD;&#xA;        &lt;/li>&#xD;&#xA;    &lt;/ul>&#xD;&#xA;&lt;/div>&#xD;&#xA;&lt;p class=&quot;MsoNormal&quot; style=&quot;MARGIN: 3pt 0cm&quot;>&#xD;&#xA;    &lt;span lang=&quot;EN-CA&quot; style=&quot;mso-ansi-language: EN-CA&quot;>&lt;span style=&quot;mso-spacerun: yes&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span>&#xD;&#xA;    This step is made simpler if we make the rules atomic, for otherwise, we will be lost in the equivalence of complex&#xD;&#xA;    logical formulas (e.g. If NOT (A AND B) is equivalent to&lt;span style=&quot;mso-spacerun: yes&quot;>&amp;nbsp;&lt;/span> IF (NOT A) OR&#xD;&#xA;    (NOT B)). There are for sure more subtle forms of redundancy: IF A AND B THEN C is equivalent to IF (NOT C) THEN (NOT&#xD;&#xA;    A) OR (NOT B). Some time changing the order of conditions can help to highlight same rules: &lt;span&#xD;&#xA;    style=&quot;mso-spacerun: yes&quot;>&amp;nbsp;&lt;/span>IF A AND B THEN C is the same as IF B AND A THEN C&lt;/span>&#xD;&#xA;&lt;/p>"/>
  <sections xmi:id="_vMBLQDmoEdy8N6BRpa8ByQ" name="Remove inconsistency rules" guid="_vMBLQDmoEdy8N6BRpa8ByQ" variabilityBasedOnElement="_vMBLQDmoEdy8N6BRpa8ByQ" sectionDescription="&lt;p>&#xD;&#xA;    &lt;span&#xD;&#xA;    style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: Arial; mso-fareast-font-family: 'Times New Roman'; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA&quot;>Overlapping&#xD;&#xA;    rules are partially redundant because they are not semantically equivalent but they point to problems: One rule may say&#xD;&#xA;    IF A AND B THEN C, the other says IF A THEN C. The question is, is B really needed to infer C? One of the two rules&#xD;&#xA;    should be eliminated.&lt;/span>&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;p>&#xD;&#xA;    It is also possible to get semantically equivalent conditions, contradictory conclusions: two rules like IF A THEN B;&#xD;&#xA;    and IF A THEN NOT(B) are leading us to have two conflicting rules, probably coming from two different sources.&#xD;&#xA;    Typically, this is symptomatic of the fact that we are missing some necessary conditions in either rule (or both, e.g.:&#xD;&#xA;    IF A AND C THEN B; IF A AND D THEN NOT(B))&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;p>&#xD;&#xA;    Another standard case is around the same conclusions derived from contradictory conditions: rules like IF A THEN B;&#xD;&#xA;    &lt;span style=&quot;mso-spacerun: yes&quot;>&amp;nbsp;&lt;/span>and IF NOT (A) THEN B: Logically, this means that the conclusions should&#xD;&#xA;    always be true. This is symptomatic of the fact that the condition is really not relevant to the conclusion&#xD;&#xA;&lt;/p>&lt;br />&#xD;&#xA;&lt;br />"/>
  <sections xmi:id="_LmcIADmqEdy8N6BRpa8ByQ" name="Ensure completeness among rules" guid="_LmcIADmqEdy8N6BRpa8ByQ" variabilityBasedOnElement="_LmcIADmqEdy8N6BRpa8ByQ" sectionDescription="&lt;p class=&quot;MsoNormal&quot; style=&quot;MARGIN: 3pt 0cm; mso-list: l0 level1 lfo1; tab-stops: list 36.0pt&quot;>&#xD;&#xA;    We are often considering three kinds of completeness:&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;div style=&quot;MARGIN-TOP: 0cm; MARGIN-LEFT: 2em&quot; type=&quot;disc&quot;>&#xD;&#xA;    &lt;ul style=&quot;MARGIN-TOP: 0cm&quot; type=&quot;disc&quot;>&#xD;&#xA;        &lt;li class=&quot;MsoNormal&quot; style=&quot;MARGIN: 3pt 0cm; mso-list: l0 level2 lfo1; tab-stops: list 72.0pt&quot;>&#xD;&#xA;            Make sure that all the possibilities are covered for a given rule pattern. If you have a rule that says &quot;loans&#xD;&#xA;            for value greater than 250,000 $ should be approved by the branch manager&quot;, it does not tell us who must/can&#xD;&#xA;            approve loans of value less than 250,000 $&#xD;&#xA;        &lt;/li>&#xD;&#xA;        &lt;li class=&quot;MsoNormal&quot; style=&quot;MARGIN: 3pt 0cm; mso-list: l0 level2 lfo1; tab-stops: list 72.0pt&quot;>&#xD;&#xA;            Make sure that all derived data in the object model has corresponding computation or inference rules. This&#xD;&#xA;            involves computed attributes, qualifications (e.g. customer status, account type, etc.)&#xD;&#xA;        &lt;/li>&#xD;&#xA;        &lt;li class=&quot;MsoNormal&quot; style=&quot;MARGIN: 3pt 0cm; mso-list: l0 level2 lfo1; tab-stops: list 72.0pt&quot;>&#xD;&#xA;            Make sure that integrity and cardinality constraints are somehow represented. Either in the object model or in&#xD;&#xA;            rules&#xD;&#xA;        &lt;/li>&#xD;&#xA;    &lt;/ul>&#xD;&#xA;&lt;/div>"/>
  <sections xmi:id="_w3cyUDmoEdy8N6BRpa8ByQ" name="Analyze rule volatility" guid="_w3cyUDmoEdy8N6BRpa8ByQ" variabilityBasedOnElement="_w3cyUDmoEdy8N6BRpa8ByQ" sectionDescription="&lt;span&#xD;&#xA;style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: Arial; mso-fareast-font-family: 'Times New Roman'; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA&quot;>This&#xD;&#xA;a good timing to ask the business user how often the rule will change once we did the rule transformation.&lt;/span>"/>
  <sections xmi:id="_0-T6ADmoEdy8N6BRpa8ByQ" name="Understand rule dependencies, rule sharing" guid="_0-T6ADmoEdy8N6BRpa8ByQ" variabilityBasedOnElement="_0-T6ADmoEdy8N6BRpa8ByQ" sectionDescription="&lt;p class=&quot;MsoNormal&quot; style=&quot;MARGIN: 3pt 0cm; mso-list: l0 level1 lfo1; tab-stops: list 36.0pt&quot;>&#xD;&#xA;    A rule R1 depends on a rule R2 if the enforcement of R2 results into a situation where R1 is relevant (or needs to be&#xD;&#xA;    enforced). A simple common example, is a rule R2 which is creating new data, or is modifying existing data that is&#xD;&#xA;    tested by R1.&#xD;&#xA;&lt;/p>&lt;br class=&quot;MsoNormal&quot; style=&quot;MARGIN: 3pt 0cm; mso-list: l0 level1 lfo1; tab-stops: list 36.0pt&quot; />&#xD;&#xA;&lt;br />&#xD;&#xA;&lt;p class=&quot;MsoNormal&quot; style=&quot;MARGIN: 3pt 0cm; mso-list: l0 level1 lfo1; tab-stops: list 36.0pt&quot;>&#xD;&#xA;    Understanding dependencies help determine the likely &quot;execution&quot; sequence of rules. The execution sequence is useful&#xD;&#xA;    for rule analysis to detect undesirable dependencies to plan rule testing. For the implementation the execution&#xD;&#xA;    sequence is useful to understand how the results will look like: some rule engine tools&amp;nbsp;will determine that&#xD;&#xA;    sequence automatically, and on the fly (chaining). If we implement business rules in a procedural fashion, we need to&#xD;&#xA;    understand the execution sequence to enforce it&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;p class=&quot;MsoNormal&quot; style=&quot;MARGIN: 3pt 0cm; mso-list: l0 level1 lfo1; tab-stops: list 36.0pt&quot;>&#xD;&#xA;    &lt;span lang=&quot;EN-CA&quot; style=&quot;mso-ansi-language: EN-CA&quot;>Some of the undesirable dependencies include circular dependencies&#xD;&#xA;    leading to infinite loops. Others will cause us to re-evaluate rule jurisdiction&lt;/span>&#xD;&#xA;&lt;/p>&lt;br class=&quot;MsoNormal&quot; style=&quot;MARGIN: 3pt 0cm; mso-list: l0 level1 lfo1; tab-stops: list 36.0pt&quot; />&#xD;&#xA;&lt;br />&#xD;&#xA;&lt;p class=&quot;MsoNormal&quot; style=&quot;MARGIN: 3pt 0cm; mso-list: l0 level1 lfo1; tab-stops: list 36.0pt&quot;>&#xD;&#xA;    &lt;span lang=&quot;EN-CA&quot; style=&quot;mso-ansi-language: EN-CA&quot;>When the work is done the last step is to look at how rule can be&#xD;&#xA;    shared between process flow. Rule sharing is an important step of the analysis. It can be done once we have progressed&#xD;&#xA;    in the rule set implementation. Rule re-factoring activity can help on implementing some rule sharing pattern.&lt;/span>&#xD;&#xA;&lt;/p>"/>
</org.eclipse.epf.uma:TaskDescription>
