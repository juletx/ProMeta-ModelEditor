<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmi:id="-b0rH1AkPSmj1YKyweFWSuQ" name="new_guideline,_oVMZADSoEdy07ZJqOGUGaQ" guid="-b0rH1AkPSmj1YKyweFWSuQ" changeDate="2008-07-11T10:04:38.000+0200" version="7.2.0" mainDescription="&lt;h3>&#xD;&#xA;    What is prioritized?&#xD;&#xA;&lt;/h3>&#xD;&#xA;&lt;p>&#xD;&#xA;    Prioritization should happen for work items, such as enhancement requests,&amp;nbsp;requirements, defects, project tasks,&#xD;&#xA;    and so on. The work items list provides one place for prioritizing work. Prioritizing units of work that are too small&#xD;&#xA;    may lead to analysis-paralysis.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;h3>&#xD;&#xA;    Who prioritizes?&#xD;&#xA;&lt;/h3>&#xD;&#xA;&lt;p>&#xD;&#xA;    Prioritization is done by the extended team. Here are some examples on how different team members contribute to the&#xD;&#xA;    prioritization:&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;ul>&#xD;&#xA;    &lt;li>&#xD;&#xA;        Analysts&amp;nbsp;collaborate with stakeholders to establish the initial priorities for work items to implement, such&#xD;&#xA;        as features, use cases, and scenarios.&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        Architects&amp;nbsp;collaborate with stakeholders and the development team to identify the architecturally significant&#xD;&#xA;        use cases and scenarios, and re-prioritize these so that the team understands what needs to be done to drive down&#xD;&#xA;        technical risk, and&amp;nbsp;to make progress&amp;nbsp;on&amp;nbsp;evolving the product in a technically sensible fashion.&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        Developers&amp;nbsp;and&amp;nbsp;testers help define&amp;nbsp;(but do not decide) the priorities of defects relative to&#xD;&#xA;        achieving iteration objectives.&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        Project managers facilitate (but do not decide), driving convergence on what the team should focus on when planning&#xD;&#xA;        a project, planning an iteration, and managing an iteration. They do this in order to ensure smooth execution, and&#xD;&#xA;        that the perspectives of all team members are properly heard. When the team cannot gain consensus in a reasonable&#xD;&#xA;        time, the project manager has final say on the priority of work items that are too small to warrant the attention&#xD;&#xA;        of the paying stakeholders.&#xD;&#xA;    &lt;/li>&#xD;&#xA;    &lt;li>&#xD;&#xA;        stakeholders&amp;nbsp;that pay for the application have the final say on what capabilities to prioritize.&#xD;&#xA;    &lt;/li>&#xD;&#xA;&lt;/ul>&#xD;&#xA;&lt;h3>&#xD;&#xA;    When do you prioritize?&#xD;&#xA;&lt;/h3>&#xD;&#xA;&lt;p>&#xD;&#xA;    When you&amp;nbsp;enter a new work item in&amp;nbsp;the Work Items List, give it an initial priority. Priorities are always&#xD;&#xA;    changing. The sections below describe what re-prioritization is done when you are planning a project, planning an&#xD;&#xA;    iteration,&amp;nbsp;or managing an iteration.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;h4>&#xD;&#xA;    Prioritizing when planning a project&#xD;&#xA;&lt;/h4>&#xD;&#xA;&lt;p>&#xD;&#xA;    During project planning,&amp;nbsp;prioritize the key features, use cases, and scenarios. Also, potentially assign them&#xD;&#xA;    to&amp;nbsp;iterations as a part of laying out the project plan, by defining at a high level what should be done when.&#xD;&#xA;    These priorities will be revised later on as iterations are planned.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;p>&#xD;&#xA;    When starting a project where an existing application will be enhanced,&amp;nbsp;a Work Items List may exist from past&#xD;&#xA;    projects and usage of the application. If this is the case,&amp;nbsp;go through the Work Items List to survey and&#xD;&#xA;    re-prioritize existing work items, so&amp;nbsp;that the team understands what to focus on.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;h4>&#xD;&#xA;    Prioritizing when planning an iteration&#xD;&#xA;&lt;/h4>&#xD;&#xA;&lt;p>&#xD;&#xA;    When planning what to deliver for an iteration,&amp;nbsp;the team needs to balance what delivers immediate value to the&#xD;&#xA;    stakeholders with what risks need to be mitigated.The chosen balance should be reflected in the iteration objectives,&#xD;&#xA;    which then drive further prioritization and assignments of work items to the next iteration. This exercise should be&#xD;&#xA;    done by the entire team to reflect all of the key perspectives, such as technical (&quot;doing task A before task B saves&#xD;&#xA;    you time&quot;), managerial (&quot;we do not have anybody that knows that legacy application until next iteration&quot;, or business&#xD;&#xA;    (&quot;this scenario is more important than that scenario&quot;).&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;h4>&#xD;&#xA;    Prioritizing when managing an iteration&#xD;&#xA;&lt;/h4>&#xD;&#xA;&lt;p>&#xD;&#xA;    The recommendation is not to&amp;nbsp;expand or change the scope of an iteration, because this will almost certainly lead&#xD;&#xA;    to scope creep, as well as potential confusion among the team on what to work on. As new features and enhancements are&#xD;&#xA;    requested, capture them in the Work Items List, but do not assign them to the current iteration.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;p>&#xD;&#xA;    During an iteration, you are developing and testing code. As you develop solution increments, you will find defects. In&#xD;&#xA;    most cases, you will directly fix trivial&amp;nbsp;defects as you find them during development. Examples of such defects&#xD;&#xA;    are the many problems you find as you implement your code (for example, using a test-driven development approach or&#xD;&#xA;    doing your regular unit tests). In other cases, the defect should be captured as a work item. This allows it to be&#xD;&#xA;    prioritized, and potentially developed by somebody else or at a different time. If a defect needs to be addressed to&#xD;&#xA;    provide an iteration build of reasonable quality&amp;nbsp;and that&amp;nbsp;aligns with the&amp;nbsp;iteration objectives,&amp;nbsp;the&#xD;&#xA;    defect&amp;nbsp;should be&amp;nbsp;fixed&amp;nbsp;during the current iteration. Note that this is not a creep or change of scope,&#xD;&#xA;    since it merely indicates that something needs to be fixed to deliver what&amp;nbsp;the team&amp;nbsp;already committed to.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;h3>&#xD;&#xA;    How do you prioritize?&#xD;&#xA;&lt;/h3>&#xD;&#xA;&lt;p>&#xD;&#xA;    Prioritizing is the difficult balancing of frequently competing priorities. For more information on the art of&#xD;&#xA;    prioritizing, see for example [&lt;a class=&quot;elementLinkWithUserText&quot;&#xD;&#xA;    href=&quot;./../../../core.tech.common.base/guidances/supportingmaterials/references.tech_6CCF393.html#COH05&quot;&#xD;&#xA;    guid=&quot;_9ToeIB83Edqsvps02rpOOg&quot;>COH05&lt;/a>].&#xD;&#xA;&lt;/p>" longPresentationName="new_guideline,_oVMZADSoEdy07ZJqOGUGaQ"/>
