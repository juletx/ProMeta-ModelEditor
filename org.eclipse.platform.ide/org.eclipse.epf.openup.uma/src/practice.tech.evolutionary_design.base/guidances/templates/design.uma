<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:GuidanceDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmi:id="-giTBOvJczHXweRzBQEo-7A" name="new_template,_EOPcMAMUEdylNddAObilIA" guid="-giTBOvJczHXweRzBQEo-7A" changeDate="2008-08-14T17:20:04.000+0200" version="7.5.0" mainDescription="&lt;p>&#xD;&#xA;    This template describes how the design can be organized to be understood from multiple perspectives. It also provides&#xD;&#xA;    suggestions for how patterns and descriptions of small, reusable interactions can be used to minimize redundancy.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;p>&#xD;&#xA;    It is important not to think of design as &quot;a document.&quot; Design information that is worth keeping for some duration must&#xD;&#xA;    have a long-lived form. But that form might be as a repository in a visual modeling tool, or as subdirectories of&#xD;&#xA;    whiteboard diagrams captured with a digital camera, or as an actual document that provides structure for images taken&#xD;&#xA;    from a myriad of sources.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;p>&#xD;&#xA;    Designs are often organized into requirement realizations. A requirements realization is a part of the design that&#xD;&#xA;    shows how one or more requirements is implemented.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;p>&#xD;&#xA;    This template describes the information that should be conveyed. Typically, it works best to convey the information&#xD;&#xA;    graphically (either with UML or another unambiguous notation), or at least in words, at an abstract level. You can&#xD;&#xA;    enhance this with code examples, but best not to render the design solely at the code level.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;p>&#xD;&#xA;    The structure of the design is suggested in this template.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;h2>&#xD;&#xA;    Design structure&#xD;&#xA;&lt;/h2>&#xD;&#xA;&lt;p style=&quot;COLOR: #0000ff&quot;>&#xD;&#xA;    [Describe the design from the highest level. This is commonly done with a diagram that shows a layered architecture.]&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;h2>&#xD;&#xA;    Subsystems&#xD;&#xA;&lt;/h2>&#xD;&#xA;&lt;h3>&#xD;&#xA;    [Sub-system1]&#xD;&#xA;&lt;/h3>&#xD;&#xA;&lt;p style=&quot;COLOR: #0000ff&quot;>&#xD;&#xA;    [Describe the design of a portion of the system (a package or component, for instance). The design should capture both&#xD;&#xA;    static and dynamic perspectives.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;p style=&quot;COLOR: #0000ff&quot;>&#xD;&#xA;    When capturing dynamic descriptions of behavior, look for reusable chunks of behavior that you can reference to&#xD;&#xA;    simplify the design of the requirement realizations.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;p style=&quot;COLOR: #0000ff&quot;>&#xD;&#xA;    You can break this section down into lower-level subsections to describe lower-level, encapsulated subsystems.]&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;h2>&#xD;&#xA;    Patterns&#xD;&#xA;&lt;/h2>&#xD;&#xA;&lt;h3>&#xD;&#xA;    [Pattern1]&#xD;&#xA;&lt;/h3>&#xD;&#xA;&lt;h4>&#xD;&#xA;    Overview&#xD;&#xA;&lt;/h4>&#xD;&#xA;&lt;p style=&quot;COLOR: #0000ff&quot;>&#xD;&#xA;    [Provide an overview of the pattern in words in some consistent form. The overview of a pattern can include the intent,&#xD;&#xA;    motivation, and applicability.]&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;h4>&#xD;&#xA;    Structure&#xD;&#xA;&lt;/h4>&#xD;&#xA;&lt;p style=&quot;COLOR: #0000ff&quot;>&#xD;&#xA;    [Describe the pattern from a static perspective. Include all of the participants and how they relate to one another,&#xD;&#xA;    and call out the&amp;nbsp;relevant data and behavior.]&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;h4>&#xD;&#xA;    Behavior&#xD;&#xA;&lt;/h4>&#xD;&#xA;&lt;p style=&quot;COLOR: #0000ff&quot;>&#xD;&#xA;    [Describe the pattern from a dynamic perspective. Walk the reader through how the participants collaborate to support&#xD;&#xA;    various scenarios.]&#xD;&#xA;&lt;/p>Example &#xD;&#xA;&lt;p style=&quot;COLOR: #0000ff&quot;>&#xD;&#xA;    [Often, you can convey the nature of the pattern better with an additional concrete example.]&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;h2>&#xD;&#xA;    Requirement&amp;nbsp;realizations&#xD;&#xA;&lt;/h2>&#xD;&#xA;&lt;h3>&#xD;&#xA;    [Realization1]&#xD;&#xA;&lt;/h3>&#xD;&#xA;&lt;h4>&#xD;&#xA;    View of participants&#xD;&#xA;&lt;/h4>&#xD;&#xA;&lt;p style=&quot;COLOR: #0000ff&quot;>&#xD;&#xA;    [Describe the participating design elements from a static perspective, giving details such as behavior, relationships,&#xD;&#xA;    and attributes relevant to this realization.]&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;h4>&#xD;&#xA;    Basic scenario&#xD;&#xA;&lt;/h4>&#xD;&#xA;&lt;p style=&quot;COLOR: #0000ff&quot;>&#xD;&#xA;    [For the main flow, describe how instances of the design elements collaborate to realize the requirements. When using&#xD;&#xA;    UML, this can be done with collaboration diagrams (sequence or communication).]&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;h4>&#xD;&#xA;    Additional scenarios&#xD;&#xA;&lt;/h4>&#xD;&#xA;&lt;p style=&quot;COLOR: #0000ff&quot;>&#xD;&#xA;    [For other scenarios that must be described to convey an appropriate amount of information about how the requirement&#xD;&#xA;    behavior will be realized, describe how instances of the design elements collaborate to realize the requirement. When&#xD;&#xA;    using UML, you can do this with collaboration diagrams (sequence or communication).]&#xD;&#xA;&lt;/p>" longPresentationName="new_template,_EOPcMAMUEdylNddAObilIA"/>
