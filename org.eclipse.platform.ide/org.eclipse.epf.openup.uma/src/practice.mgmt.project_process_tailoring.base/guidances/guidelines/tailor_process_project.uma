<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmi:id="-nvLaImb1prGvwbEmRDb5yw" name="tailor_process_project,_NOBsvSZLEd-QuZFPf_YdqQ" guid="-nvLaImb1prGvwbEmRDb5yw" changeDate="2010-07-21T11:01:15.000+0200" version="7.5.0" mainDescription="&lt;p>&#xA;    &lt;strong>1. Defining scope&lt;/strong>&lt;br />&#xA;    &lt;br />&#xA;    Ideally you should be able to match your project to an existing process and tool configuration that has already been&#xA;    applied successfully on similar projects.&lt;br />&#xA;    Thus the scope of your tailoring will be none or relatively small.&lt;br />&#xA;    &lt;br />&#xA;    Process tailoring is different from process instantiation. Process tailoring is about roles and procedures, whereas&#xA;    process instantiation is about specific individuals and specific work products. Process instantiation is covered by&#xA;    project management practices, and typically includes:&lt;br />&#xA;    a. Identifying which individuals perform which roles (may include identifying backup individuals)&lt;br />&#xA;    b. Identifying which individuals do which approvals&lt;br />&#xA;    c. Where each work product is stored.&lt;br />&#xA;    d. Creating project plans with work items that reflect the process.&lt;br />&#xA;    &lt;br />&#xA;    The following are some typical examples of project-specific process tailoring:&lt;br />&#xA;    a. Adding/removing work products and tasks&lt;br />&#xA;    b. Changing milestones, and what work products will be made available at each milestone, and their state of&#xA;    completion&lt;br />&#xA;    c. Tool and/or format used for each work product&lt;br />&#xA;    d. Responsibilities for review and approval (a RACI table is often useful)&lt;br />&#xA;    e. Detailed procedures for reporting progress, performing measurements, managing requirements, managing change&#xA;    requests, etc.&lt;br />&#xA;    &lt;br />&#xA;    Sometimes projects will combine process tailoring and process instantiation. For example, you can create a RACI table&#xA;    that includes both individuals and roles, and create a table that says not only which work products will be produced,&#xA;    but also where the specific instances will be stored.&lt;br />&#xA;    This blending is fine, the only drawback is that such information has to be updated for each project, and can't be used&#xA;    unchanged.&lt;br />&#xA;    &lt;br />&#xA;    &lt;strong>2. Deciding how the process will be documented&lt;/strong>&lt;br />&#xA;    &lt;br />&#xA;    The rest of this guideline assumes you are starting with a published process documented using Rational Method&#xA;    Composer.&lt;br />&#xA;    There are several options for tailoring such a process (listed here from simple to more specialized)&lt;br />&#xA;    &lt;br />&#xA;    1. Automated&lt;br />&#xA;    Tools can automate aspects of the process so that they do not have to be separately documented.&lt;br />&#xA;    For example, the process template in Rational Team Concert can be tailored to require approvals before a work product&#xA;    is closed. Rational Requisite Pro can require specific attributes to be stored for specific requirements types. And so&#xA;    on.&lt;br />&#xA;    &lt;br />&#xA;    2. Document-based&lt;br />&#xA;    You can create one or more documents that describe how your project process varies from the published process.&lt;br />&#xA;    The Development Case is such a document. Examples of information that may be captured in a development case are:&lt;br />&#xA;    - differences in how roles are applied&lt;br />&#xA;    - which artifacts are added or dropped&lt;br />&#xA;    - what level of review formality to apply at each milestone.&lt;br />&#xA;    Other typical process documents include:&lt;br />&#xA;    &lt;br />&#xA;    •Manual Styleguide&lt;br />&#xA;    •Project-specific Templates&lt;br />&#xA;    •Measurement Plan&lt;br />&#xA;    •Problem Resolution Plan&lt;br />&#xA;    •Product Acceptance Plan&lt;br />&#xA;    •Quality Assurance Plan&lt;br />&#xA;    •Risk Management Plan&lt;br />&#xA;    •Requirements Management Plan&lt;br />&#xA;    •Configuration Management Plan&lt;br />&#xA;    &lt;br />&#xA;    Word templates are provided for these documents. Note that these documents can also be implemented as a website or a&#xA;    Wiki.&lt;br />&#xA;    &lt;br />&#xA;    3. Wiki-based&lt;br />&#xA;    You can post a process on an EPF Wiki server. You can then add comments and make changes specific to your project. You&#xA;    can also attach documents created using the &quot;document-based&quot; approach.&lt;br />&#xA;    &lt;br />&#xA;    4. RMC Configuration&lt;br />&#xA;    You can use Rational Method Composer to change the configuration and republish it.&lt;br />&#xA;    You can select and deselect individual practices, or use the tailoring perspective to add/remove individual&#xA;    elements.&lt;br />&#xA;    &lt;br />&#xA;    5. Method Authoring&lt;br />&#xA;    If you do need to do substantial tailoring, then you can author your own practices and plug-ins using a method&#xA;    authoring tool, such as EPF Composer or Rational(R) Method Composer.&lt;br />&#xA;    Guidelines for this are outside the scope of this practice (this is considered to generally be an enterprise-scope&#xA;    concern).&#xA;&lt;/p>&#xA;&lt;p>&#xA;    &lt;strong>3. Developing Project-specific Content&lt;/strong>&#xA;&lt;/p>&#xA;&lt;p>&#xA;    Ideally there is relatively little process content unique to the project.&amp;nbsp; However, project specific information&#xA;    needs to be captured, and your team may develop their own best practices over time.&amp;nbsp; Depending on the scope, and&#xA;    how you've decided to capture process content, this may be a minor step performed by one person, or may require several&#xA;    tasks assigned to several individuals.&lt;br />&#xA;    &lt;br />&#xA;    &lt;strong>4. Deciding which tools will be used to create and maintain work products&lt;br />&#xA;    &lt;/strong>Ideally you should be able to match your project to a tool configuration that has already been applied&#xA;    successfully on similar projects, and just make minor tweaks specific to your project.&lt;br />&#xA;    &lt;br />&#xA;    If you do need to make tool-fit choices, please refer to Practice: Organizational Process Definition, which has&#xA;    guidance on how to select, acquire,&amp;nbsp;and configure tools for specific process needs.&lt;br />&#xA;    &lt;br />&#xA;    &lt;br />&#xA;    &lt;strong>5. Deploying the process&lt;br />&#xA;    &lt;/strong>If only minor changes to the process have been made, then a simple briefing with affected stakeholders is&#xA;    generally sufficient.&lt;br />&#xA;    However, if significant changes have been made to the process, or if the team is unfamiliar with the process being&#xA;    adopted, then we recommend having a workshop to familiarize the team.&lt;br />&#xA;    Having mentors on the team, or accessible to the team, that are familiar with new practices can also increase the&#xA;    success of adopting the practices.&lt;br />&#xA;    If skills are an issue, then additional training may be required and should be scheduled.&#xA;&lt;/p>" longPresentationName="tailor_process_project,_NOBsvSZLEd-QuZFPf_YdqQ"/>
