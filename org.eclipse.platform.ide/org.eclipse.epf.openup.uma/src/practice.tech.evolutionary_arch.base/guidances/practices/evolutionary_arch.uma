<?xml version="1.0" encoding="UTF-8"?><org.eclipse.epf.uma:PracticeDescription xmlns:epf="http://www.eclipse.org/epf" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:xmi="http://www.omg.org/XMI" longPresentationName="new_practice,_uVnpQB4qEd2bS8fFOQ7WWA" xmi:version="2.0" epf:version="1.5.1" xmi:id="-TleqHW_wvIYc0qLQgZUchA" name="new_practice,_uVnpQB4qEd2bS8fFOQ7WWA" guid="-TleqHW_wvIYc0qLQgZUchA" changeDate="2008-10-15T15:27:20.000+0200" version="7.5.0">
  <mainDescription>&lt;h3&gt;&#xD;
    The essence of evolutionary architecture&#xD;
&lt;/h3&gt;&#xD;
&lt;p&gt;&#xD;
    In the Evolutionary Architecture practice, you analyze the major technical concerns that affect the solution and&#xD;
    document architectural decisions to ensure that you have assessed and communicated those decisions.&#xD;
&lt;/p&gt;&#xD;
&lt;h3&gt;&#xD;
    The key principles of the Evolutionary Architecture practice are:&#xD;
&lt;/h3&gt;&#xD;
&lt;ul type="disc"&gt;&#xD;
    &lt;li class="MsoNormal c3"&gt;&#xD;
        &lt;strong&gt;&lt;span class="c1"&gt;Perform architecture work "just in time" for all other work.&lt;/span&gt;&lt;/strong&gt; &lt;span&#xD;
        class="c1"&gt;When planning your project, identify and discuss architectural issues with your team, and then&#xD;
        prioritize architectural work with any other work.&lt;/span&gt; Base your priorities on mitigating technical risk rather&#xD;
        than creating value. Deferring architectural issues to handle them "just in time" enables the architecture to&#xD;
        &lt;em&gt;&lt;span class="c2"&gt;evolve over time&lt;/span&gt;&lt;/em&gt;.&#xD;
    &lt;/li&gt;&#xD;
&lt;/ul&gt;&#xD;
&lt;ul type="disc"&gt;&#xD;
    &lt;li class="MsoNormal c3"&gt;&#xD;
        &lt;strong&gt;&lt;span class="c1"&gt;Document key architectural decisions and outstanding issues&lt;/span&gt;&lt;/strong&gt;&lt;span&#xD;
        class="c1"&gt;. The &lt;a class="elementLink"&#xD;
        href="./../../../practice.tech.evolutionary_arch.base/workproducts/architecture_notebook_9BB92433.html"&#xD;
        guid="_0XAf0MlgEdmt3adZL5Dmdw"&gt;Architecture Notebook&lt;/a&gt; a list of the architectural issues to make it easy to&#xD;
        understand which architectural decisions you've made and which you've not yet addressed.&lt;/span&gt;&#xD;
    &lt;/li&gt;&#xD;
&lt;/ul&gt;&#xD;
&lt;ul type="disc"&gt;&#xD;
    &lt;li class="MsoNormal c3"&gt;&#xD;
        &lt;strong&gt;&lt;span class="c1"&gt;Implement and test key capabilities as a way to address architectural&#xD;
        issues&lt;/span&gt;&lt;/strong&gt;&lt;span class="c1"&gt;. Resolving architectural issues typically requires not only architectural&#xD;
        brainstorming, but also associated prototyping. In other words: implement enough code to validate the assumptions&#xD;
        behind the architecture. The code becomes production code, except for anything thrown away because it proves the&#xD;
        architecture invalid.&lt;/span&gt;&#xD;
    &lt;/li&gt;&#xD;
&lt;/ul&gt;</mainDescription>
  <additionalInfo>&lt;h3&gt;&#xD;
    Additional resources&#xD;
&lt;/h3&gt;&#xD;
&lt;p&gt;&#xD;
    See these sources for more information on the evolutionary architecture approach:&#xD;
&lt;/p&gt;&#xD;
&lt;ul&gt;&#xD;
    &lt;li&gt;&#xD;
        &lt;a href="http://www.agilemodeling.com/essays/agileArchitecture.htm" target="_blank"&gt;Agile Architecture: Strategies&#xD;
        for Scaling Agile Development&lt;/a&gt;&#xD;
    &lt;/li&gt;&#xD;
    &lt;li&gt;&#xD;
        &lt;a href="http://www.agilemodeling.com/essays/initialArchitectureModeling.htm" target="_blank"&gt;Architectural&#xD;
        Envisioning&lt;/a&gt;&#xD;
    &lt;/li&gt;&#xD;
    &lt;li&gt;&#xD;
        &lt;a href="http://www.agiledata.org/essays/enterpriseArchitecture.html" target="_blank"&gt;Agile Enterprise&#xD;
        Architecture&lt;/a&gt;&#xD;
    &lt;/li&gt;&#xD;
&lt;/ul&gt;&lt;br /&gt;</additionalInfo>
  <problem>&lt;p&gt;&#xD;
    &lt;span class="c1"&gt;The Evolutionary Architecture practice describes how to incrementally build and improve the software&#xD;
    architecture while uncovering and addressing architectural issues during software development. This reduces technical&#xD;
    risk without requiring significant up-front architectural effort.&lt;/span&gt;&#xD;
&lt;/p&gt;&#xD;
&lt;p&gt;&#xD;
    &lt;span class="c1"&gt;This practice:&lt;/span&gt;&#xD;
&lt;/p&gt;&#xD;
&lt;ul&gt;&#xD;
    &lt;li&gt;&#xD;
        Improves quality and productivity by reducing the need to make time-consuming, error-prone fixes to late-detected&#xD;
        problems that result from architectural flaws. This is possible because the architecture is validated early, and&#xD;
        key architectural problems are corrected before the majority of development is done.&#xD;
    &lt;/li&gt;&#xD;
&lt;/ul&gt;&#xD;
&lt;ul&gt;&#xD;
    &lt;li&gt;&#xD;
        Reduces time to market by focusing on reuse. It improves the consistency and maintainability of the system by&#xD;
        incorporating lessons learned from development back into the architecture and applying those lessons to the rest of&#xD;
        development.&#xD;
    &lt;/li&gt;&#xD;
&lt;/ul&gt;&#xD;
&lt;ul&gt;&#xD;
    &lt;li&gt;&#xD;
        &lt;div class="MsoNormal c2"&gt;&#xD;
            &lt;span class="c1"&gt;Improves predictability by identifying and implementing the highest-risk technical areas&#xD;
            first.&lt;/span&gt; It improves the team's responsiveness to change by shortening the architectural cycle and&#xD;
            minimizing time wasted in architectural scrap and rework when changes arise.&#xD;
        &lt;/div&gt;&#xD;
    &lt;/li&gt;&#xD;
&lt;/ul&gt;</problem>
  <application>&lt;p&gt;&#xD;
    The best way to read this practice is to first familiarize yourself with its overall structure: what is in it and how&#xD;
    it is organized.&#xD;
&lt;/p&gt;&#xD;
&lt;p&gt;&#xD;
    Next, review the key concepts for the practice. An especially important concept is &lt;a class="elementLinkWithType"&#xD;
    href="./../../../core.tech.common.extend_supp/guidances/concepts/software_architecture_59A08DE0.html"&#xD;
    guid="__O7tAMVvEduLYZUGfgZrkQ"&gt;Concept: Software Architecture&lt;/a&gt;. After you understand what architecture is, turn your&#xD;
    attention to the Architecture Notebook. Then review the tasks, accessing guidelines and tool mentors associated with&#xD;
    each task as needed. You can also access the guidance provided by the practice directly through the Guidance folder.&#xD;
&lt;/p&gt;&#xD;
&lt;p&gt;&#xD;
    Be sure to take a look at the list of enablement materials for additional sources of information. See the Additional&#xD;
    Resources section of this page.&#xD;
&lt;/p&gt;&#xD;
&lt;p&gt;&#xD;
    For step-by-step instructions on how to adopt this practice, see &lt;a class="elementLinkWithType"&#xD;
    href="./../../../practice.tech.evolutionary_arch.base/guidances/roadmaps/how_to_adopt_evolutionary_arch_practice_FEFA2CCF.html"&#xD;
     guid="_Odpz8NciEdy1nJEYZGzN4A"&gt;Roadmap: How to adopt the Evolutionary Architecture practice&lt;/a&gt;.&#xD;
&lt;/p&gt;</application>
</org.eclipse.epf.uma:PracticeDescription>